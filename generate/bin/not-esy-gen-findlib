#! /bin/sh

set -e
set -u

## TODO: windows

emit_ocamlpath () {
  TOOLCHAIN=$1
  ## TODO: this fails on zsh
  STORED_IFS=$IFS
  IFS=":"
  for LIB_PATH in ${OCAMLPATH}; do
    if [ "$TOOLCHAIN" != "native" ]; then
      LIB_PATH="$(dirname $LIB_PATH)/$TOOLCHAIN-sysroot/$(basename $LIB_PATH)"
    fi
    if [[ -d "$LIB_PATH" ]]; then
        printf "%s" "$LIB_PATH:"
    fi
  done
  IFS=$STORED_IFS
}
create_findlib () {
  FINDLIB_FOLDER=$1
  TOOLCHAIN=$2
  TOOLCHAIN_OCAMLPATH=$(emit_ocamlpath $TOOLCHAIN)

  if [ "$TOOLCHAIN" == "native" ]; then
    FILE="$FINDLIB_FOLDER/findlib.conf"
    COMPILER=$(dirname $(dirname $(which ocamlrun)))
    TOOLCHAIN=""
  else
    FILE="$FINDLIB_FOLDER/findlib.conf.d/$TOOLCHAIN.conf"
    COMPILER=$ESY_TOOLCHAIN_OCAML
    TOOLCHAIN="($TOOLCHAIN)"
  fi

cat > $FILE <<EOF
path$TOOLCHAIN = "$TOOLCHAIN_OCAMLPATH"
destdir$TOOLCHAIN = "$COMPILER/lib"
stdlib$TOOLCHAIN = "$COMPILER/lib/ocaml"
ocamlc$TOOLCHAIN = "$COMPILER/bin/ocamlc"
ocamlopt$TOOLCHAIN = "$COMPILER/bin/ocamlopt"
ocamlcp$TOOLCHAIN = "$COMPILER/bin/ocamlcp"
ocamlmklib$TOOLCHAIN = "$COMPILER/bin/ocamlmklib"
ocamlmktop$TOOLCHAIN = "$COMPILER/bin/ocamlmktop"
ocamldoc$TOOLCHAIN = "$COMPILER/bin/ocamldoc"
ocamldep$TOOLCHAIN = "$COMPILER/bin/ocamldep"
EOF
}

FOLDER="$cur__target_dir/../findlib"

mkdir -p "$FOLDER/findlib.conf.d"

create_findlib "$FOLDER" "native"
create_findlib "$FOLDER" "$ESY_TOOLCHAIN"

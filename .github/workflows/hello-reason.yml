name: Hello Reason

on: [push, pull_request]

defaults:
  run:
    working-directory: examples/hello-reason

jobs:
  native:
    name: Build for native

    strategy:
      matrix:
        word_size: [64]
        system: [ubuntu, macos, macos-arm64]
        include:
          - system: ubuntu
            word_size: 32

    runs-on: ${{ matrix.system }}-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        if: ${{ matrix.system != 'macos-arm64' }}
        with:
          node-version: 14

      - name: Install esy
        if: ${{ matrix.system != 'macos-arm64' }}
        run: npm install -g esy

      - name: Create esy wrapper 64bits
        if: ${{ matrix.word_size == 64 }}
        run: |
          echo '{
            "source": "./package.json",
            "override": {
              "dependencies": {
                "reason-mobile": "github:'"${GITHUB_REPOSITORY}"':generate.json#'"${GITHUB_SHA}"'"
              }
            }
          }' > generate.json

      - name: Create esy wrapper 32bits
        if: ${{ matrix.word_size == 32 }}
        run: |
          sudo apt-get install gcc-multilib
          echo '{
            "source": "./package.json",
            "override": {
              "dependencies": {
                "reason-mobile": "github:'"${GITHUB_REPOSITORY}"':generate.json#'"${GITHUB_SHA}"'"
              },
              "resolutions": {
                "ocaml": {
                  "source": "esy-ocaml/ocaml#dd66cad318e04c7f2c753f8ce2fd8851e975f89a",
                  "override": {
                    "build": [
                      [
                        "./esy-configure",
                        "--prefix", "$cur__install",
                        "--build=x86_64-pc-linux-gnu",
                        "--host=i386-linux",
                        "CC=gcc -m32",
                        "AS=as --32",
                        "ASPP=gcc -m32 -c",
                        "PARTIALLD=ld -r -melf_i386"
                      ],
                      "./esy-build"
                    ]
                  }
                }
              }
            }
          }' > generate.json

      - uses: esy/github-action@master
        with:
          working-directory: examples/hello-reason
          manifest: ./generate.json
          cache-key: ${{ hashFiles('esy.lock/index.json') }}-${{ matrix.word_size }}

  cross-compile:
    needs: native
    strategy:
      fail-fast: false
      matrix:
        word_size: [64]
        system: [ubuntu, macos, macos-arm64]
        target:
          [
            android.arm64,
            android.x86_64,
            freebsd.x86_64,
            ios.arm64,
            ios.simulator.x86_64,
            linux.musl.arm64,
            linux.musl.x86_64,
            macos.arm64,
          ]
        include:
          - system: ubuntu
            word_size: 32
            target: linux.musl.armv6
        exclude:
          - system: ubuntu
            target: ios.arm64
          - system: ubuntu
            target: ios.simulator.x86_64
          - system: ubuntu
            target: macos.arm64
          # TODO: Fix linux.musl + macOS on the CI
          - system: macos
            target: linux.musl.arm64
          - system: macos
            target: linux.musl.x86_64
          - system: macos
            target: freebsd.x86_64
          - system: macos-arm64
            target: linux.musl.arm64
          - system: macos-arm64
            target: linux.musl.x86_64
          - system: macos-arm64
            target: freebsd.x86_64

    name: Build ${{ matrix.target }} on ${{ matrix.system }}
    runs-on: ${{ matrix.system }}-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        if: ${{ matrix.system != 'macos-arm64' }}
        with:
          node-version: 14

      - name: Install esy
        if: ${{ matrix.system != 'macos-arm64' }}
        run: npm install -g esy

      - name: Create esy wrapper 64bits
        if: ${{ matrix.word_size == 64 }}
        run: |
          echo '{
            "source": "./package.json",
            "override": {
              "dependencies": {
                "reason-mobile": "github:'"${GITHUB_REPOSITORY}"':generate.json#'"${GITHUB_SHA}"'"
              }
            }
          }' > generate.json

      - name: Create esy wrapper 32bits
        if: ${{ matrix.word_size == 32 }}
        run: |
          sudo apt-get install gcc-multilib
          echo '{
            "source": "./package.json",
            "override": {
              "dependencies": {
                "reason-mobile": "github:'"${GITHUB_REPOSITORY}"':generate.json#'"${GITHUB_SHA}"'"
              },
              "resolutions": {
                "ocaml": {
                  "source": "esy-ocaml/ocaml#dd66cad318e04c7f2c753f8ce2fd8851e975f89a",
                  "override": {
                    "build": [
                      [
                        "./esy-configure",
                        "--prefix", "$cur__install",
                        "--build=x86_64-pc-linux-gnu",
                        "--host=i386-linux",
                        "CC=gcc -m32",
                        "AS=as --32",
                        "ASPP=gcc -m32 -c",
                        "PARTIALLD=ld -r -melf_i386"
                      ],
                      "./esy-build"
                    ]
                  }
                }
              }
            }
          }' > generate.json

      - uses: esy/github-action@master
        with:
          working-directory: examples/hello-reason
          manifest: ./generate.json
          cache-key: ${{ hashFiles('esy.lock/index.json') }}-${{ matrix.word_size == 64 }}

      - name: Generate wrapper
        run: esy @generate generate ${{ matrix.target }}

      - name: Build ${{ matrix.target }}
        run: esy @${{ matrix.target }} build

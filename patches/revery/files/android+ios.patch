diff --git a/Xcode/._Revery.xcodeproj b/Xcode/._Revery.xcodeproj
new file mode 100755
index 0000000..4ea90d2
Binary files /dev/null and b/Xcode/._Revery.xcodeproj differ
diff --git a/Xcode/Examples/Base.lproj/._Main.storyboard b/Xcode/Examples/Base.lproj/._Main.storyboard
new file mode 100644
index 0000000..777b51c
Binary files /dev/null and b/Xcode/Examples/Base.lproj/._Main.storyboard differ
diff --git a/Xcode/Examples/Base.lproj/Main.storyboard b/Xcode/Examples/Base.lproj/Main.storyboard
new file mode 100644
index 0000000..8cf58c2
--- /dev/null
+++ b/Xcode/Examples/Base.lproj/Main.storyboard
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="13122.16" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" useSafeAreas="YES" colorMatched="YES" initialViewController="BV1-FR-VrT">
+    <dependencies>
+        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="13104.12"/>
+        <capability name="Safe area layout guides" minToolsVersion="9.0"/>
+        <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
+    </dependencies>
+    <scenes>
+        <!--Game View Controller-->
+        <scene sceneID="tXr-a1-R10">
+            <objects>
+                <viewController id="BV1-FR-VrT" customClass="GameViewController" customModuleProvider="" sceneMemberID="viewController">
+                    <view key="view" contentMode="scaleToFill" id="3se-qz-xqx" customClass="MTKView">
+                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
+                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
+                        <color key="backgroundColor" xcode11CocoaTouchSystemColor="systemBackgroundColor" cocoaTouchSystemColor="whiteColor"/>
+                        <viewLayoutGuide key="safeArea" id="rZh-zQ-HcR"/>
+                    </view>
+                </viewController>
+                <placeholder placeholderIdentifier="IBFirstResponder" id="SZV-WD-TEh" sceneMemberID="firstResponder"/>
+            </objects>
+        </scene>
+    </scenes>
+</document>
diff --git a/Xcode/Examples/Info.plist b/Xcode/Examples/Info.plist
new file mode 100644
index 0000000..c4f98b5
--- /dev/null
+++ b/Xcode/Examples/Info.plist
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>CFBundleDevelopmentRegion</key>
+	<string>$(DEVELOPMENT_LANGUAGE)</string>
+	<key>CFBundleExecutable</key>
+	<string>$(EXECUTABLE_NAME)</string>
+	<key>CFBundleIdentifier</key>
+	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
+	<key>CFBundleInfoDictionaryVersion</key>
+	<string>6.0</string>
+	<key>CFBundleName</key>
+	<string>$(PRODUCT_NAME)</string>
+	<key>CFBundlePackageType</key>
+	<string>$(PRODUCT_BUNDLE_PACKAGE_TYPE)</string>
+	<key>CFBundleShortVersionString</key>
+	<string>1.0</string>
+	<key>CFBundleVersion</key>
+	<string>1</string>
+	<key>LSRequiresIPhoneOS</key>
+	<true/>
+	<key>UILaunchStoryboardName</key>
+	<string>Main</string>
+	<key>UIMainStoryboardFile</key>
+	<string>Main</string>
+	<key>UIRequiredDeviceCapabilities</key>
+	<array>
+		<string>armv7</string>
+	</array>
+	<key>UIStatusBarHidden</key>
+	<true/>
+	<key>UISupportedInterfaceOrientations</key>
+	<array>
+		<string>UIInterfaceOrientationPortrait</string>
+		<string>UIInterfaceOrientationLandscapeLeft</string>
+		<string>UIInterfaceOrientationLandscapeRight</string>
+	</array>
+	<key>UISupportedInterfaceOrientations~ipad</key>
+	<array>
+		<string>UIInterfaceOrientationPortrait</string>
+		<string>UIInterfaceOrientationPortraitUpsideDown</string>
+		<string>UIInterfaceOrientationLandscapeLeft</string>
+		<string>UIInterfaceOrientationLandscapeRight</string>
+	</array>
+</dict>
+</plist>
diff --git a/Xcode/Examples/build.sh b/Xcode/Examples/build.sh
new file mode 100644
index 0000000..7724cfb
--- /dev/null
+++ b/Xcode/Examples/build.sh
@@ -0,0 +1,34 @@
+#! /bin/sh
+
+## esy @<toolchain> sh build.sh <toolchain>
+## probably: esy @ios.arm64 sh build.sh ios.arm64
+
+set -e
+set -u
+
+TOOLCHAIN=$1
+
+echo "cd \$cur__root; dune build -x $TOOLCHAIN @install || exit 0" | not-esy-setup sh
+
+INSTALL_FOLDER="$cur__target_dir/install/default.$TOOLCHAIN"
+
+# uses a temporary folder to avoid 
+mkdir -p tmp
+cd tmp
+
+cp $INSTALL_FOLDER/bin/* .
+cp $SDL2_LIB_PATH/libSDL2.dylib .
+cp $HARFBUZZ_LIB_PATH/libharfbuzz.dylib .
+
+SDL2_NAME="$(otool -L Examples | grep SDL2 | awk '{print $1}')"
+HARFBUZZ_NAME="$(otool -L Examples | grep harfbuzz | awk '{print $1}')"
+
+install_name_tool -change $SDL2_NAME @executable_path/libSDL2.dylib Examples
+install_name_tool -change $HARFBUZZ_NAME @executable_path/libharfbuzz.dylib Examples
+
+cd ..
+
+rm tmp/Info.plist
+mv tmp/* .
+
+rmdir tmp
diff --git a/Xcode/Revery.xcodeproj/._project.xcworkspace b/Xcode/Revery.xcodeproj/._project.xcworkspace
new file mode 100755
index 0000000..83f6029
Binary files /dev/null and b/Xcode/Revery.xcodeproj/._project.xcworkspace differ
diff --git a/Xcode/Revery.xcodeproj/project.pbxproj b/Xcode/Revery.xcodeproj/project.pbxproj
new file mode 100644
index 0000000..cb531c1
--- /dev/null
+++ b/Xcode/Revery.xcodeproj/project.pbxproj
@@ -0,0 +1,365 @@
+// !$*UTF8*$!
+{
+	archiveVersion = 1;
+	classes = {
+	};
+	objectVersion = 50;
+	objects = {
+
+/* Begin PBXBuildFile section */
+		A017847D2470AC2B00F18F23 /* libharfbuzz.dylib in Copy Files */ = {isa = PBXBuildFile; fileRef = A017847B2470AC2700F18F23 /* libharfbuzz.dylib */; settings = {ATTRIBUTES = (CodeSignOnCopy, ); }; };
+		A01784802470AC6A00F18F23 /* libSDL2.dylib in Copy Files */ = {isa = PBXBuildFile; fileRef = A017847E2470AC6200F18F23 /* libSDL2.dylib */; settings = {ATTRIBUTES = (CodeSignOnCopy, ); }; };
+		A0C04C2A2470ACFB000BF488 /* Examples in Copy Files */ = {isa = PBXBuildFile; fileRef = A0C04C272470AC9A000BF488 /* Examples */; settings = {ATTRIBUTES = (CodeSignOnCopy, ); }; };
+		A0C04C2D2470B814000BF488 /* Main.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = A0C04C2B2470B814000BF488 /* Main.storyboard */; };
+		A0C04C3A2470BCB0000BF488 /* Roboto-Regular.ttf in Copy Files */ = {isa = PBXBuildFile; fileRef = A0C04C342470BCB0000BF488 /* Roboto-Regular.ttf */; };
+		A0C04C3B2470BCB0000BF488 /* outrun-logo.png in Copy Files */ = {isa = PBXBuildFile; fileRef = A0C04C352470BCB0000BF488 /* outrun-logo.png */; };
+		A0C04C3C2470BCB0000BF488 /* TestFont.ttf in Copy Files */ = {isa = PBXBuildFile; fileRef = A0C04C362470BCB0000BF488 /* TestFont.ttf */; };
+		A0C04C3D2470BCB0000BF488 /* FontAwesome5FreeSolid.otf in Copy Files */ = {isa = PBXBuildFile; fileRef = A0C04C372470BCB0000BF488 /* FontAwesome5FreeSolid.otf */; };
+		A0C04C3E2470BCB0000BF488 /* revery-icon.png in Copy Files */ = {isa = PBXBuildFile; fileRef = A0C04C382470BCB0000BF488 /* revery-icon.png */; };
+		A0C04C3F2470BCB0000BF488 /* outrun-icon.png in Copy Files */ = {isa = PBXBuildFile; fileRef = A0C04C392470BCB0000BF488 /* outrun-icon.png */; };
+/* End PBXBuildFile section */
+
+/* Begin PBXCopyFilesBuildPhase section */
+		A050BBA92470A28B00EAABF6 /* Copy Files */ = {
+			isa = PBXCopyFilesBuildPhase;
+			buildActionMask = 12;
+			dstPath = "";
+			dstSubfolderSpec = 6;
+			files = (
+				A0C04C3A2470BCB0000BF488 /* Roboto-Regular.ttf in Copy Files */,
+				A0C04C3D2470BCB0000BF488 /* FontAwesome5FreeSolid.otf in Copy Files */,
+				A0C04C3B2470BCB0000BF488 /* outrun-logo.png in Copy Files */,
+				A0C04C3F2470BCB0000BF488 /* outrun-icon.png in Copy Files */,
+				A0C04C2A2470ACFB000BF488 /* Examples in Copy Files */,
+				A0C04C3C2470BCB0000BF488 /* TestFont.ttf in Copy Files */,
+				A0C04C3E2470BCB0000BF488 /* revery-icon.png in Copy Files */,
+				A017847D2470AC2B00F18F23 /* libharfbuzz.dylib in Copy Files */,
+				A01784802470AC6A00F18F23 /* libSDL2.dylib in Copy Files */,
+			);
+			name = "Copy Files";
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXCopyFilesBuildPhase section */
+
+/* Begin PBXFileReference section */
+		A017847B2470AC2700F18F23 /* libharfbuzz.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; path = libharfbuzz.dylib; sourceTree = "<group>"; };
+		A017847E2470AC6200F18F23 /* libSDL2.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; path = libSDL2.dylib; sourceTree = "<group>"; };
+		A050BB8624709F3E00EAABF6 /* Examples.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = Examples.app; sourceTree = BUILT_PRODUCTS_DIR; };
+		A0C04C272470AC9A000BF488 /* Examples */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.executable"; path = Examples; sourceTree = "<group>"; };
+		A0C04C2C2470B814000BF488 /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/Main.storyboard; sourceTree = "<group>"; };
+		A0C04C342470BCB0000BF488 /* Roboto-Regular.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; path = "Roboto-Regular.ttf"; sourceTree = "<group>"; };
+		A0C04C352470BCB0000BF488 /* outrun-logo.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = "outrun-logo.png"; sourceTree = "<group>"; };
+		A0C04C362470BCB0000BF488 /* TestFont.ttf */ = {isa = PBXFileReference; lastKnownFileType = file; path = TestFont.ttf; sourceTree = "<group>"; };
+		A0C04C372470BCB0000BF488 /* FontAwesome5FreeSolid.otf */ = {isa = PBXFileReference; lastKnownFileType = file; path = FontAwesome5FreeSolid.otf; sourceTree = "<group>"; };
+		A0C04C382470BCB0000BF488 /* revery-icon.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = "revery-icon.png"; sourceTree = "<group>"; };
+		A0C04C392470BCB0000BF488 /* outrun-icon.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = "outrun-icon.png"; sourceTree = "<group>"; };
+		A0C04C422470BD3D000BF488 /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
+/* End PBXFileReference section */
+
+/* Begin PBXFrameworksBuildPhase section */
+		A050BB8324709F3E00EAABF6 /* Frameworks */ = {
+			isa = PBXFrameworksBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXFrameworksBuildPhase section */
+
+/* Begin PBXGroup section */
+		A050BB7B24709F2A00EAABF6 = {
+			isa = PBXGroup;
+			children = (
+				A050BB8824709F3E00EAABF6 /* Examples */,
+				A050BB8724709F3E00EAABF6 /* Products */,
+			);
+			sourceTree = "<group>";
+		};
+		A050BB8724709F3E00EAABF6 /* Products */ = {
+			isa = PBXGroup;
+			children = (
+				A050BB8624709F3E00EAABF6 /* Examples.app */,
+			);
+			name = Products;
+			sourceTree = "<group>";
+		};
+		A050BB8824709F3E00EAABF6 /* Examples */ = {
+			isa = PBXGroup;
+			children = (
+				A017847E2470AC6200F18F23 /* libSDL2.dylib */,
+				A017847B2470AC2700F18F23 /* libharfbuzz.dylib */,
+				A0C04C2B2470B814000BF488 /* Main.storyboard */,
+				A0C04C372470BCB0000BF488 /* FontAwesome5FreeSolid.otf */,
+				A0C04C392470BCB0000BF488 /* outrun-icon.png */,
+				A0C04C352470BCB0000BF488 /* outrun-logo.png */,
+				A0C04C382470BCB0000BF488 /* revery-icon.png */,
+				A0C04C342470BCB0000BF488 /* Roboto-Regular.ttf */,
+				A0C04C362470BCB0000BF488 /* TestFont.ttf */,
+				A0C04C422470BD3D000BF488 /* Info.plist */,
+				A0C04C272470AC9A000BF488 /* Examples */,
+			);
+			path = Examples;
+			sourceTree = "<group>";
+		};
+/* End PBXGroup section */
+
+/* Begin PBXNativeTarget section */
+		A050BB8524709F3E00EAABF6 /* Examples */ = {
+			isa = PBXNativeTarget;
+			buildConfigurationList = A050BBA024709F3F00EAABF6 /* Build configuration list for PBXNativeTarget "Examples" */;
+			buildPhases = (
+				A050BB8224709F3E00EAABF6 /* Sources */,
+				A050BB8324709F3E00EAABF6 /* Frameworks */,
+				A050BB8424709F3E00EAABF6 /* Resources */,
+				A050BBA92470A28B00EAABF6 /* Copy Files */,
+			);
+			buildRules = (
+			);
+			dependencies = (
+			);
+			name = Examples;
+			productName = Examples;
+			productReference = A050BB8624709F3E00EAABF6 /* Examples.app */;
+			productType = "com.apple.product-type.application";
+		};
+/* End PBXNativeTarget section */
+
+/* Begin PBXProject section */
+		A050BB7C24709F2A00EAABF6 /* Project object */ = {
+			isa = PBXProject;
+			attributes = {
+				LastUpgradeCheck = 1140;
+				TargetAttributes = {
+					A050BB8524709F3E00EAABF6 = {
+						CreatedOnToolsVersion = 11.4.1;
+					};
+				};
+			};
+			buildConfigurationList = A050BB7F24709F2A00EAABF6 /* Build configuration list for PBXProject "Revery" */;
+			compatibilityVersion = "Xcode 9.3";
+			developmentRegion = en;
+			hasScannedForEncodings = 0;
+			knownRegions = (
+				en,
+				Base,
+			);
+			mainGroup = A050BB7B24709F2A00EAABF6;
+			productRefGroup = A050BB8724709F3E00EAABF6 /* Products */;
+			projectDirPath = "";
+			projectRoot = "";
+			targets = (
+				A050BB8524709F3E00EAABF6 /* Examples */,
+			);
+		};
+/* End PBXProject section */
+
+/* Begin PBXResourcesBuildPhase section */
+		A050BB8424709F3E00EAABF6 /* Resources */ = {
+			isa = PBXResourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+				A0C04C2D2470B814000BF488 /* Main.storyboard in Resources */,
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXResourcesBuildPhase section */
+
+/* Begin PBXSourcesBuildPhase section */
+		A050BB8224709F3E00EAABF6 /* Sources */ = {
+			isa = PBXSourcesBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
+/* End PBXSourcesBuildPhase section */
+
+/* Begin PBXVariantGroup section */
+		A0C04C2B2470B814000BF488 /* Main.storyboard */ = {
+			isa = PBXVariantGroup;
+			children = (
+				A0C04C2C2470B814000BF488 /* Base */,
+			);
+			name = Main.storyboard;
+			sourceTree = "<group>";
+		};
+/* End PBXVariantGroup section */
+
+/* Begin XCBuildConfiguration section */
+		A050BB8024709F2A00EAABF6 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+			};
+			name = Debug;
+		};
+		A050BB8124709F2A00EAABF6 /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+			};
+			name = Release;
+		};
+		A050BBA124709F3F00EAABF6 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
+				CLANG_CXX_LIBRARY = "libc++";
+				CLANG_ENABLE_MODULES = YES;
+				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_ENABLE_OBJC_WEAK = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
+				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_COMMA = YES;
+				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
+				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
+				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
+				CLANG_WARN_EMPTY_BODY = YES;
+				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
+				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
+				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_STRICT_PROTOTYPES = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
+				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
+				CLANG_WARN_UNREACHABLE_CODE = YES;
+				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
+				CODE_SIGN_IDENTITY = "Apple Development";
+				CODE_SIGN_STYLE = Automatic;
+				COPY_PHASE_STRIP = NO;
+				DEBUG_INFORMATION_FORMAT = dwarf;
+				DEVELOPMENT_TEAM = KAWHVWPZAL;
+				ENABLE_BITCODE = NO;
+				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				ENABLE_TESTABILITY = YES;
+				GCC_C_LANGUAGE_STANDARD = gnu11;
+				GCC_DYNAMIC_NO_PIC = NO;
+				GCC_NO_COMMON_BLOCKS = YES;
+				GCC_OPTIMIZATION_LEVEL = 0;
+				GCC_PREPROCESSOR_DEFINITIONS = (
+					"DEBUG=1",
+					"$(inherited)",
+				);
+				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
+				GCC_WARN_UNDECLARED_SELECTOR = YES;
+				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
+				GCC_WARN_UNUSED_FUNCTION = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				INFOPLIST_FILE = Examples/Info.plist;
+				IPHONEOS_DEPLOYMENT_TARGET = 13.4;
+				LD_RUNPATH_SEARCH_PATHS = "@executable_path/Frameworks";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+					"$(PROJECT_DIR)/Examples",
+				);
+				MACH_O_TYPE = mh_execute;
+				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
+				MTL_FAST_MATH = YES;
+				ONLY_ACTIVE_ARCH = YES;
+				PRODUCT_BUNDLE_IDENTIFIER = "org.revery-ui.Examples";
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				PROVISIONING_PROFILE_SPECIFIER = "";
+				SDKROOT = iphoneos;
+				TARGETED_DEVICE_FAMILY = "1,2";
+			};
+			name = Debug;
+		};
+		A050BBA224709F3F00EAABF6 /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				CLANG_ANALYZER_NONNULL = YES;
+				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
+				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
+				CLANG_CXX_LIBRARY = "libc++";
+				CLANG_ENABLE_MODULES = YES;
+				CLANG_ENABLE_OBJC_ARC = YES;
+				CLANG_ENABLE_OBJC_WEAK = YES;
+				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
+				CLANG_WARN_BOOL_CONVERSION = YES;
+				CLANG_WARN_COMMA = YES;
+				CLANG_WARN_CONSTANT_CONVERSION = YES;
+				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
+				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
+				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
+				CLANG_WARN_EMPTY_BODY = YES;
+				CLANG_WARN_ENUM_CONVERSION = YES;
+				CLANG_WARN_INFINITE_RECURSION = YES;
+				CLANG_WARN_INT_CONVERSION = YES;
+				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
+				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
+				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
+				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
+				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
+				CLANG_WARN_STRICT_PROTOTYPES = YES;
+				CLANG_WARN_SUSPICIOUS_MOVE = YES;
+				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
+				CLANG_WARN_UNREACHABLE_CODE = YES;
+				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
+				CODE_SIGN_IDENTITY = "Apple Development";
+				CODE_SIGN_STYLE = Automatic;
+				COPY_PHASE_STRIP = NO;
+				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
+				DEVELOPMENT_TEAM = KAWHVWPZAL;
+				ENABLE_BITCODE = NO;
+				ENABLE_NS_ASSERTIONS = NO;
+				ENABLE_STRICT_OBJC_MSGSEND = YES;
+				GCC_C_LANGUAGE_STANDARD = gnu11;
+				GCC_NO_COMMON_BLOCKS = YES;
+				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
+				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
+				GCC_WARN_UNDECLARED_SELECTOR = YES;
+				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
+				GCC_WARN_UNUSED_FUNCTION = YES;
+				GCC_WARN_UNUSED_VARIABLE = YES;
+				INFOPLIST_FILE = Examples/Info.plist;
+				IPHONEOS_DEPLOYMENT_TARGET = 13.4;
+				LD_RUNPATH_SEARCH_PATHS = "@executable_path/Frameworks";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+					"$(PROJECT_DIR)/Examples",
+				);
+				MACH_O_TYPE = mh_execute;
+				MTL_ENABLE_DEBUG_INFO = NO;
+				MTL_FAST_MATH = YES;
+				PRODUCT_BUNDLE_IDENTIFIER = "org.revery-ui.Examples";
+				PRODUCT_NAME = "$(TARGET_NAME)";
+				PROVISIONING_PROFILE_SPECIFIER = "";
+				SDKROOT = iphoneos;
+				TARGETED_DEVICE_FAMILY = "1,2";
+				VALIDATE_PRODUCT = YES;
+			};
+			name = Release;
+		};
+/* End XCBuildConfiguration section */
+
+/* Begin XCConfigurationList section */
+		A050BB7F24709F2A00EAABF6 /* Build configuration list for PBXProject "Revery" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				A050BB8024709F2A00EAABF6 /* Debug */,
+				A050BB8124709F2A00EAABF6 /* Release */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+		A050BBA024709F3F00EAABF6 /* Build configuration list for PBXNativeTarget "Examples" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				A050BBA124709F3F00EAABF6 /* Debug */,
+				A050BBA224709F3F00EAABF6 /* Release */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
+/* End XCConfigurationList section */
+	};
+	rootObject = A050BB7C24709F2A00EAABF6 /* Project object */;
+}
diff --git a/Xcode/Revery.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/Xcode/Revery.xcodeproj/project.xcworkspace/contents.xcworkspacedata
new file mode 100644
index 0000000..6c30e5b
--- /dev/null
+++ b/Xcode/Revery.xcodeproj/project.xcworkspace/contents.xcworkspacedata
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<Workspace
+   version = "1.0">
+   <FileRef
+      location = "self:Revery.xcodeproj">
+   </FileRef>
+</Workspace>
diff --git a/Xcode/Revery.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist b/Xcode/Revery.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
new file mode 100644
index 0000000..18d9810
--- /dev/null
+++ b/Xcode/Revery.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>IDEDidComputeMac32BitWarning</key>
+	<true/>
+</dict>
+</plist>
diff --git a/Xcode/Revery.xcodeproj/xcuserdata/eduardo.xcuserdatad/xcschemes/xcschememanagement.plist b/Xcode/Revery.xcodeproj/xcuserdata/eduardo.xcuserdatad/xcschemes/xcschememanagement.plist
new file mode 100644
index 0000000..f949237
--- /dev/null
+++ b/Xcode/Revery.xcodeproj/xcuserdata/eduardo.xcuserdatad/xcschemes/xcschememanagement.plist
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
+<plist version="1.0">
+<dict>
+	<key>SchemeUserState</key>
+	<dict>
+		<key>Examples.xcscheme_^#shared#^_</key>
+		<dict>
+			<key>orderHint</key>
+			<integer>0</integer>
+		</dict>
+	</dict>
+</dict>
+</plist>
diff --git a/examples/stubs/dune b/examples/stubs/dune
index a403504..21460ee 100644
--- a/examples/stubs/dune
+++ b/examples/stubs/dune
@@ -1,6 +1,7 @@
 (library 
   (name ExampleStubs)
-  (c_names example_stubs)
+  (public_name Revery.ExampleStubs)
+  (c_names main example_stubs)
   (c_flags :standard -Wall -Wextra -Werror)
   (js_of_ocaml (javascript_files example_stubs.js))
 )
diff --git a/examples/stubs/main.c b/examples/stubs/main.c
new file mode 100644
index 0000000..23b1302
--- /dev/null
+++ b/examples/stubs/main.c
@@ -0,0 +1,26 @@
+#if __APPLE__
+#include <TargetConditionals.h>
+#endif
+
+#include <caml/callback.h>
+
+#if TARGET_OS_IPHONE
+typedef int (*SDL_main_func)(int argc, char *argv[]);
+int SDL_UIKitRunApp(int argc, char *argv[], SDL_main_func mainFunction);
+
+int SDL_main (__attribute__((unused)) int argc, char *argv[]) {
+  caml_startup(argv);
+  return 0;
+}
+
+int main (int argc, char *argv[]) {
+  return SDL_UIKitRunApp(argc, argv, SDL_main);
+}
+
+#else
+
+int main (__attribute__((unused)) int argc, char *argv[]) {
+  caml_startup(argv);
+  return 0;
+}
+#endif
\ No newline at end of file
diff --git a/src/Core/Environment.re b/src/Core/Environment.re
index 2481f84..ae541ee 100644
--- a/src/Core/Environment.re
+++ b/src/Core/Environment.re
@@ -16,30 +16,23 @@ let sleep = (t: Time.t) =>
 external yield: unit => unit = "caml_thread_yield";
 
 type os =
-  | Windows
-  | Mac
-  | Linux
+  | Android
   | Browser
-  | Unknown;
+  | IOS
+  | Linux
+  | Mac
+  | Windows;
 
-let os = {
-  webGL
-    ? Browser
-    : (
-      switch (Sys.os_type) {
-      | "Win32" => Windows
-      | _ =>
-        let ic = Unix.open_process_in("uname");
-        let uname = input_line(ic);
-        let _ = close_in(ic);
-        switch (uname) {
-        | "Darwin" => Mac
-        | "Linux" => Linux
-        | _ => Unknown
-        };
-      }
-    );
-};
+let get_native_os = () =>
+  switch (Revery_Native.Environment.getSystem()) {
+  | "android" => Android
+  | "ios" => IOS
+  | "linux" => Linux
+  | "mac" => Mac
+  | "windows" => Windows
+  | _ => failwith("Unknown operating system")
+  };
+let os = webGL ? Browser : get_native_os();
 
 module Internal = {
   let addTrailingSlash = dir => {
diff --git a/src/Core/Environment.rei b/src/Core/Environment.rei
index 3294cf4..8c3d16e 100644
--- a/src/Core/Environment.rei
+++ b/src/Core/Environment.rei
@@ -38,10 +38,11 @@ absolute, it is assumed to be relative to the current binary.
 let getAssetPath: string => string;
 
 type os =
-  | Windows
-  | Mac
-  | Linux
+  | Android
   | Browser
-  | Unknown;
+  | IOS
+  | Linux
+  | Mac
+  | Windows;
 
 let os: os;
diff --git a/src/Draw/CanvasContext.re b/src/Draw/CanvasContext.re
index 048c0ae..929c06a 100644
--- a/src/Draw/CanvasContext.re
+++ b/src/Draw/CanvasContext.re
@@ -44,9 +44,10 @@ let create = (window: Revery_Core.Window.t) => {
     None;
   | Some(glContext) =>
     Log.debug("Skia context created successfully.");
+    let framebufferId = Revery_Native.Environment.getFramebufferID();
     let framebufferInfo =
       Gr.Gl.FramebufferInfo.make(
-        Unsigned.UInt.of_int(0),
+        Unsigned.UInt.of_int(framebufferId),
         Unsigned.UInt.of_int(0x8058),
       );
 
diff --git a/src/Native/Environment.re b/src/Native/Environment.re
new file mode 100644
index 0000000..281d121
--- /dev/null
+++ b/src/Native/Environment.re
@@ -0,0 +1,2 @@
+external getFramebufferID: unit => int = "revery_getFramebufferID";
+external getSystem: unit => string = "revery_getSystem";
diff --git a/src/Native/Revery_Native.c b/src/Native/Revery_Native.c
index e4b0a31..cd4618d 100644
--- a/src/Native/Revery_Native.c
+++ b/src/Native/Revery_Native.c
@@ -11,12 +11,13 @@
 #elif __APPLE__
 #include "ReveryCocoa.h"
 #import "ReveryAppDelegate.h"
+#include <TargetConditionals.h>
 #else
 #include "ReveryGtk.h"
 #endif
 
 CAMLprim value revery_initialize() {
-#ifdef __APPLE__
+#if defined(__APPLE__) && !TARGET_OS_IPHONE
     SDLAppDelegate *sdlDelegate = [NSApp delegate];
     ReveryAppDelegate *delegate = [ReveryAppDelegate newWithSDLDelegate:sdlDelegate];
     [NSApp setDelegate:delegate];
diff --git a/src/Native/Revery_Native.re b/src/Native/Revery_Native.re
index 8996962..d3ae38b 100644
--- a/src/Native/Revery_Native.re
+++ b/src/Native/Revery_Native.re
@@ -2,5 +2,6 @@ module Dialog = Dialog;
 module Icon = Icon;
 module Notification = Notification;
 module Shell = Shell;
+module Environment = Environment;
 
 include Initialization;
diff --git a/src/Native/cocoa/ReveryAppDelegate.c b/src/Native/cocoa/ReveryAppDelegate.c
index 4ed2ad1..3e64fb9 100644
--- a/src/Native/cocoa/ReveryAppDelegate.c
+++ b/src/Native/cocoa/ReveryAppDelegate.c
@@ -1,4 +1,8 @@
 #ifdef __APPLE__
+#include <TargetConditionals.h>
+#endif
+
+#if defined(__APPLE__) && !TARGET_OS_IPHONE
 #import "ReveryAppDelegate.h"
 #import <Cocoa/Cocoa.h>
 
diff --git a/src/Native/cocoa/ReveryAppDelegate.h b/src/Native/cocoa/ReveryAppDelegate.h
index ed52ab5..ddfe05b 100644
--- a/src/Native/cocoa/ReveryAppDelegate.h
+++ b/src/Native/cocoa/ReveryAppDelegate.h
@@ -1,4 +1,8 @@
 #ifdef __APPLE__
+#include <TargetConditionals.h>
+#endif
+
+#if defined(__APPLE__) && !TARGET_OS_IPHONE
 #import <Cocoa/Cocoa.h>
 #import "SDLAppDelegate.h"
 
diff --git a/src/Native/cocoa/ReveryProgressBar.c b/src/Native/cocoa/ReveryProgressBar.c
index 5cbac2f..4b13b51 100644
--- a/src/Native/cocoa/ReveryProgressBar.c
+++ b/src/Native/cocoa/ReveryProgressBar.c
@@ -1,4 +1,8 @@
 #ifdef __APPLE__
+#include <TargetConditionals.h>
+#endif
+
+#if defined(__APPLE__) && !TARGET_OS_IPHONE
 #import <Cocoa/Cocoa.h>
 #import "ReveryProgressBar.h"
 
diff --git a/src/Native/config/discover.ml b/src/Native/config/discover.ml
deleted file mode 100644
index 90e7d89..0000000
--- a/src/Native/config/discover.ml
+++ /dev/null
@@ -1,54 +0,0 @@
-module C = Configurator.V1
-
-type os = Windows | Mac | Linux | Unknown
-
-type config = {libs: string list; cflags: string list; flags: string list}
-
-let get_mac_config () =
-  {cflags= ["-I"; "."; "-x"; "objective-c"]; libs= []; flags= []}
-
-let get_linux_config c =
-  let default = {libs= []; cflags= []; flags= []} in
-  match C.Pkg_config.get c with
-  | None -> default
-  | Some pc -> (
-    match C.Pkg_config.query pc ~package:"gtk+-3.0" with
-    | None -> default
-    | Some conf -> {libs= conf.libs; cflags= conf.cflags; flags= []} )
-
-let ccopt s = ["-ccopt"; s]
-let cclib s = ["-cclib"; s]
-
-let get_win32_config () =
-  {
-    cflags= [];
-    libs= [];
-    flags= []
-        @ cclib("-luuid")
-        @ cclib("-lole32")
-  }
-
-let uname () =
-  let ic = Unix.open_process_in "uname" in
-  let uname = input_line ic in
-  let () = close_in ic in
-  uname
-
-let get_os =
-  match Sys.os_type with
-  | "Win32" -> Windows
-  | _ -> (
-    match uname () with "Darwin" -> Mac | "Linux" -> Linux | _ -> Unknown )
-
-let () =
-  C.main ~name:"discover" (fun c ->
-      let conf =
-        match get_os with
-        | Mac -> get_mac_config ()
-        | Linux -> get_linux_config c
-        | Windows -> get_win32_config ()
-        | _ -> {libs= []; flags= []; cflags= []}
-      in
-      C.Flags.write_sexp "flags.sexp" conf.flags ;
-      C.Flags.write_sexp "c_flags.sexp" conf.cflags ;
-      C.Flags.write_sexp "c_library_flags.sexp" conf.libs )
diff --git a/src/Native/config/discover.re b/src/Native/config/discover.re
new file mode 100644
index 0000000..4f035df
--- /dev/null
+++ b/src/Native/config/discover.re
@@ -0,0 +1,99 @@
+module C = Configurator.V1;
+
+type os =
+  | Android
+  | IOS
+  | Linux
+  | Mac
+  | Windows;
+
+let header_detect_system = {|
+  #if __APPLE__
+    #include <TargetConditionals.h>
+    #if TARGET_OS_IPHONE
+      #define PLATFORM_NAME "ios"
+    #else
+      #define PLATFORM_NAME "mac"
+    #endif
+  #elif __linux__
+    #if __ANDROID__
+      #define PLATFORM_NAME "android"
+    #else
+      #define PLATFORM_NAME "linux"
+    #endif
+  #elif WIN32
+    #define PLATFORM_NAME "windows"
+  #endif
+|};
+let get_os = t => {
+  let header = {
+    let file = Filename.temp_file("discover", "os.h");
+    let fd = open_out(file);
+    output_string(fd, header_detect_system);
+    close_out(fd);
+    file;
+  };
+  let platform =
+    Configurator.V1.C_define.import(
+      t,
+      ~includes=[header],
+      [("PLATFORM_NAME", String)],
+    );
+  switch (platform) {
+  | [(_, String("android"))] => Android
+  | [(_, String("ios"))] => IOS
+  | [(_, String("linux"))] => Linux
+  | [(_, String("mac"))] => Mac
+  | [(_, String("windows"))] => Windows
+  | _ => failwith("Unknown operating system")
+  };
+};
+
+type config = {
+  libs: list(string),
+  cflags: list(string),
+  flags: list(string),
+};
+
+let get_mac_config = () => {
+  cflags: ["-I", ".", "-x", "objective-c"],
+  libs: [],
+  flags: [],
+};
+
+let get_linux_config = c => {
+  let default = {libs: [], cflags: [], flags: []};
+  switch (C.Pkg_config.get(c)) {
+  | None => default
+  | Some(pc) =>
+    switch (C.Pkg_config.query(pc, ~package="gtk+-3.0")) {
+    | None => default
+    | Some(conf) => {libs: conf.libs, cflags: conf.cflags, flags: []}
+    }
+  };
+};
+
+let ccopt = s => ["-ccopt", s];
+let cclib = s => ["-cclib", s];
+
+let get_win32_config = () => {
+  cflags: [],
+  libs: [],
+  flags: [] @ cclib("-luuid") @ cclib("-lole32"),
+};
+
+let () =
+  C.main(~name="discover", c => {
+    let conf =
+      switch (get_os(c)) {
+      | Android => {libs: [], cflags: [], flags: []}
+      | IOS
+      | Mac => get_mac_config()
+      | Linux => get_linux_config(c)
+      | Windows => get_win32_config()
+      };
+
+    C.Flags.write_sexp("flags.sexp", conf.flags);
+    C.Flags.write_sexp("c_flags.sexp", conf.cflags);
+    C.Flags.write_sexp("c_library_flags.sexp", conf.libs);
+  });
diff --git a/src/Native/dialog.c b/src/Native/dialog.c
index 9dba5f5..bc2349c 100644
--- a/src/Native/dialog.c
+++ b/src/Native/dialog.c
@@ -13,16 +13,17 @@
 #include "ReveryWin32.h"
 #elif __APPLE__
 #include "ReveryCocoa.h"
+#include <TargetConditionals.h>
 #else
 #include "ReveryGtk.h"
 #endif
 
 CAMLprim value revery_alertSupported() {
-#ifdef WIN32
+#if defined(WIN32)
     return Val_true;
-#elif __APPLE__
+#elif defined(__APPLE__) && !TARGET_OS_IPHONE
     return Val_true;
-#elif __linux__
+#elif defined(__linux__) && !defined(__ANDROID__)
     return Val_true;
 #else
     return Val_false;
@@ -34,8 +35,12 @@ CAMLprim value revery_alert(value vWindow, value vMessage) {
     const char *szMessage = String_val(vMessage);
     void *pWin = (void *)vWindow;
 
-#ifdef WIN32
+#if defined(WIN32)
     revery_alert_win32(pWin, szMessage);
+#elif defined(__ANDROID__) || TARGET_OS_IPHONE
+    printf("WARNING - Not implemented: alert\n");
+    printf("alert - message: %s\n", szMessage);
+    printf("alert - pWin: %p\n", pWin);
 #elif __APPLE__
     revery_alert_cocoa(pWin, szMessage);
 #elif __linux__
@@ -96,11 +101,11 @@ CAMLprim value revery_alertOpenFiles_native(
 
     char **fileList = NULL;
 
-#ifdef __APPLE__
+#if defined(__APPLE__) && !TARGET_OS_IPHONE
     fileList = revery_open_files_cocoa(
                    startDirectory, fileTypes, fileTypesSize, allowMultiple, canChooseFiles,
                    canChooseDirectories, showHidden, buttonText, title);
-#elif __linux__
+#elif defined(__linux__) && !defined(__ANDROID__)
     fileList = revery_open_files_gtk(
                    startDirectory, fileTypes, fileTypesSize, allowMultiple, canChooseFiles,
                    canChooseDirectories, showHidden, buttonText, title);
diff --git a/src/Native/dialog_cocoa.c b/src/Native/dialog_cocoa.c
index 0e42dce..740c36a 100644
--- a/src/Native/dialog_cocoa.c
+++ b/src/Native/dialog_cocoa.c
@@ -1,4 +1,8 @@
 #ifdef __APPLE__
+#include <TargetConditionals.h>
+#endif
+
+#if defined(__APPLE__) && !TARGET_OS_IPHONE
 #include <stdio.h>
 
 #import <Cocoa/Cocoa.h>
diff --git a/src/Native/dialog_gtk.c b/src/Native/dialog_gtk.c
index d2dd60c..da09d71 100644
--- a/src/Native/dialog_gtk.c
+++ b/src/Native/dialog_gtk.c
@@ -1,4 +1,4 @@
-#ifdef __linux__
+#if defined(__linux__) && !defined(__ANDROID__)
 #include <gtk/gtk.h>
 #include <string.h>
 
diff --git a/src/Native/dune b/src/Native/dune
index b8fe369..e760097 100644
--- a/src/Native/dune
+++ b/src/Native/dune
@@ -12,7 +12,8 @@
         shell shell_cocoa shell_gtk shell_win32
         utilities
         ReveryAppDelegate
-        ReveryProgressBar)
+        ReveryProgressBar
+        environment)
     (c_flags :standard -Wall -Wextra -Werror (:include c_flags.sexp))
     (c_library_flags (:include c_library_flags.sexp))
     (libraries sdl2))
diff --git a/src/Native/environment.c b/src/Native/environment.c
new file mode 100644
index 0000000..8c2e65f
--- /dev/null
+++ b/src/Native/environment.c
@@ -0,0 +1,37 @@
+#define GL_SILENCE_DEPRECATION 1
+
+#ifdef __APPLE__
+#include <TargetConditionals.h>
+#endif
+#include <caml/alloc.h>
+#include <caml/mlvalues.h>
+
+#if __ANDROID__
+#include <GLES/gl.h>
+#elif TARGET_OS_IPHONE
+#include <OpenGLES/ES2/gl.h>
+#elif __APPLE__
+#include <OpenGL/gl.h>
+#else
+#include <GL/gl.h>
+#endif
+
+value revery_getFramebufferID () {
+  GLint id = 0;
+  glGetIntegerv(GL_FRAMEBUFFER_BINDING, &id);
+  return Val_int(id);
+}
+
+value revery_getSystem () {
+  #if TARGET_OS_IPHONE
+    return caml_copy_string("ios");
+  #elif __ANDROID__
+    return caml_copy_string("android");
+  #elif __APPLE__
+    return caml_copy_string("mac");
+  #elif __linux__
+    return caml_copy_string("linux");
+  #elif WIN32
+    return caml_copy_string("windows");
+  #endif
+}
\ No newline at end of file
diff --git a/src/Native/icon.c b/src/Native/icon.c
index 28f0e93..e1463fc 100644
--- a/src/Native/icon.c
+++ b/src/Native/icon.c
@@ -12,6 +12,7 @@
 #include "ReveryWin32.h"
 #elif __APPLE__
 #include "ReveryCocoa.h"
+#include <TargetConditionals.h>
 #else
 #include "ReveryGtk.h"
 #endif
@@ -19,7 +20,7 @@
 CAMLprim value revery_getIconHandle() {
     CAMLparam0();
     void *ret;
-#ifdef __APPLE__
+#if __APPLE__ && !TARGET_OS_IPHONE
     ret = revery_getIconHandle_cocoa();
 #elif WIN32
     ret = revery_getIconHandle_win32();
@@ -42,7 +43,7 @@ CAMLprim value revery_setIconProgress(value vWin, value vIconHandle,
     */
     // If vProgress "is long", it has no type arguments, and is therefore indeterminate
     if (Is_long(vProgress)) {
-#ifdef __APPLE__
+#if __APPLE__ && !TARGET_OS_IPHONE
         (void)win;
         revery_setIconProgressIndeterminate_cocoa(ih);
 #elif WIN32
@@ -52,7 +53,7 @@ CAMLprim value revery_setIconProgress(value vWin, value vIconHandle,
 #endif
     } else if (Is_block(vProgress)) {  // If vProgress "is block", it has a type argument and must be determinate
         float progress = Double_val(Field(vProgress, 0));
-#ifdef __APPLE__
+#if __APPLE__ && !TARGET_OS_IPHONE
         (void)win;
         revery_setIconProgress_cocoa(ih, progress);
 #elif WIN32
@@ -73,7 +74,7 @@ CAMLprim value revery_hideIconProgress(value vWin, value vIconHandle) {
     void *win = (void *)vWin;
     void *ih = (void *)vIconHandle;
 
-#ifdef __APPLE__
+#if __APPLE__ && !TARGET_OS_IPHONE
     (void)win;
     revery_hideIconProgress_cocoa(ih);
 #elif WIN32
diff --git a/src/Native/icon_cocoa.c b/src/Native/icon_cocoa.c
index 642610e..e6e3bb8 100644
--- a/src/Native/icon_cocoa.c
+++ b/src/Native/icon_cocoa.c
@@ -1,4 +1,8 @@
 #ifdef __APPLE__
+#include <TargetConditionals.h>
+#endif
+
+#if defined(__APPLE__) && !TARGET_OS_IPHONE
 #include <stdio.h>
 
 #import <Cocoa/Cocoa.h>
diff --git a/src/Native/notification.c b/src/Native/notification.c
index e4f23ee..f274017 100644
--- a/src/Native/notification.c
+++ b/src/Native/notification.c
@@ -13,6 +13,7 @@
 #include "ReveryWin32.h"
 #elif __APPLE__
 #include "ReveryCocoa.h"
+#include <TargetConditionals.h>
 #else
 #include "ReveryGtk.h"
 #endif
@@ -28,7 +29,7 @@ CAMLprim value revery_dispatchNotification(value vNotificationT) {
     body = String_val(Field(vNotificationT, 1));
     value onClickCaml = Field(vNotificationT, 2);
     mute = Int_val(Field(vNotificationT, 3));
-#ifdef __APPLE__
+#if defined(__APPLE__) && !TARGET_OS_IPHONE
     revery_dispatchNotification_cocoa(title, body, onClickCaml, mute);
     UNUSED(title);
     UNUSED(body);
@@ -57,7 +58,7 @@ CAMLprim value revery_scheduleNotificationFromNow(value vSeconds, value vNotific
     onClickCaml = Field(vNotificationT, 2);
     mute = Int_val(Field(vNotificationT, 3));
     seconds = Int_val(vSeconds);
-#ifdef __APPLE__
+#if defined(__APPLE__) && !TARGET_OS_IPHONE
     revery_scheduleNotificationFromNow_cocoa(title, body, onClickCaml, mute, seconds);
     UNUSED(title);
     UNUSED(body);
diff --git a/src/Native/notification_cocoa.c b/src/Native/notification_cocoa.c
index aa38f34..c33b2ca 100644
--- a/src/Native/notification_cocoa.c
+++ b/src/Native/notification_cocoa.c
@@ -1,4 +1,8 @@
 #ifdef __APPLE__
+#include <TargetConditionals.h>
+#endif
+
+#if defined(__APPLE__) && !TARGET_OS_IPHONE
 #import "cocoa/ReveryAppDelegate.h"
 #import <Cocoa/Cocoa.h>
 
diff --git a/src/Native/shell.c b/src/Native/shell.c
index c8faaaa..1506c0e 100644
--- a/src/Native/shell.c
+++ b/src/Native/shell.c
@@ -13,6 +13,7 @@
 #include "ReveryWin32.h"
 #elif __APPLE__
 #include "ReveryCocoa.h"
+#include <TargetConditionals.h>
 #else
 #include "ReveryGtk.h"
 #endif
@@ -22,7 +23,7 @@ CAMLprim value revery_openURL(value vURL) {
 
     const char *url_string = String_val(vURL);
     int success = 0;
-#ifdef __APPLE__
+#if __APPLE__ && !TARGET_OS_IPHONE
     success = revery_openURL_cocoa(url_string);
 #elif __linux__
     success = revery_openURL_gtk(url_string);
@@ -41,7 +42,7 @@ CAMLprim value revery_openFile(value vPath) {
 
     const char *path_string = String_val(vPath);
     int success = 0;
-#ifdef __APPLE__
+#if __APPLE__ && !TARGET_OS_IPHONE
     success = revery_openFile_cocoa(path_string);
 #elif __linux__
     success = revery_openFile_gtk(path_string);
@@ -51,7 +52,7 @@ CAMLprim value revery_openFile(value vPath) {
 #else
     fprintf(stderr, "WARNING: %s is not implemented on this platform.\n", __func__);
     success = 0;
-    UNUSED(url_string);
+    UNUSED(path_string);
 #endif
     CAMLreturn(Val_bool(success));
 }
diff --git a/src/Native/shell_cocoa.c b/src/Native/shell_cocoa.c
index 09c60ae..d3b3c11 100644
--- a/src/Native/shell_cocoa.c
+++ b/src/Native/shell_cocoa.c
@@ -1,4 +1,8 @@
 #ifdef __APPLE__
+#include <TargetConditionals.h>
+#endif
+
+#if defined(__APPLE__) && !TARGET_OS_IPHONE
 #import <Cocoa/Cocoa.h>
 
 int revery_openURL_cocoa(const char *url_string) {
diff --git a/src/Native/shell_gtk.c b/src/Native/shell_gtk.c
index e1dfec8..4d2093d 100644
--- a/src/Native/shell_gtk.c
+++ b/src/Native/shell_gtk.c
@@ -1,4 +1,4 @@
-#ifdef __linux__
+#if defined(__linux__) && !defined(__ANDROID__)
 #include <gtk/gtk.h>
 
 /*  gtk_show_uri is technically deprecated, but it has the most support

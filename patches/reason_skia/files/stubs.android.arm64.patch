diff --git a/src/wrapped/bindings/dune b/src/wrapped/bindings/dune
index 4bff6ad..68932b2 100644
--- a/src/wrapped/bindings/dune
+++ b/src/wrapped/bindings/dune
@@ -1,8 +1,3 @@
-(rule
- (targets skia_generated_type_stubs.ml)
- (deps ../stubgen/ml_types_stubgen.exe)
- (action (with-stdout-to %{targets} (run %{deps}))))
-
 (library
  (name SkiaWrappedBindings)
  (flags -w -9)
diff --git a/src/wrapped/bindings/skia_generated_type_stubs.ml b/src/wrapped/bindings/skia_generated_type_stubs.ml
new file mode 100644
index 0000000..0165c9d
--- /dev/null
+++ b/src/wrapped/bindings/skia_generated_type_stubs.ml
@@ -0,0 +1,274 @@
+include Ctypes
+let lift x = x
+open Ctypes_static
+
+let rec field : type t a. t typ -> string -> a typ -> (a, t) field =
+  fun s fname ftype -> match s, fname with
+  | Struct ({ tag = "gr_gl_framebufferinfo_t"} as s'), "fFormat" ->
+    let f = {ftype; fname; foffset = 4} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "gr_gl_framebufferinfo_t"} as s'), "fFBOID" ->
+    let f = {ftype; fname; foffset = 0} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_imageinfo_t"} as s'), "alphaType" ->
+    let f = {ftype; fname; foffset = 20} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_imageinfo_t"} as s'), "colorType" ->
+    let f = {ftype; fname; foffset = 16} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_imageinfo_t"} as s'), "height" ->
+    let f = {ftype; fname; foffset = 12} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_imageinfo_t"} as s'), "width" ->
+    let f = {ftype; fname; foffset = 8} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_imageinfo_t"} as s'), "colorspace" ->
+    let f = {ftype; fname; foffset = 0} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_rect_t"} as s'), "bottom" ->
+    let f = {ftype; fname; foffset = 12} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_rect_t"} as s'), "right" ->
+    let f = {ftype; fname; foffset = 8} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_rect_t"} as s'), "top" ->
+    let f = {ftype; fname; foffset = 4} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_rect_t"} as s'), "left" ->
+    let f = {ftype; fname; foffset = 0} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_irect_t"} as s'), "bottom" ->
+    let f = {ftype; fname; foffset = 12} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_irect_t"} as s'), "right" ->
+    let f = {ftype; fname; foffset = 8} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_irect_t"} as s'), "top" ->
+    let f = {ftype; fname; foffset = 4} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_irect_t"} as s'), "left" ->
+    let f = {ftype; fname; foffset = 0} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_matrix_t"} as s'), "mat" ->
+    let f = {ftype; fname; foffset = 0} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_point_t"} as s'), "y" ->
+    let f = {ftype; fname; foffset = 4} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_point_t"} as s'), "x" ->
+    let f = {ftype; fname; foffset = 0} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_fontmetrics_t"} as s'), "fStrikeoutPosition" ->
+    let f = {ftype; fname; foffset = 60} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_fontmetrics_t"} as s'), "fStrikeoutThickness" ->
+    let f = {ftype; fname; foffset = 56} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_fontmetrics_t"} as s'), "fUnderlinePosition" ->
+    let f = {ftype; fname; foffset = 52} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_fontmetrics_t"} as s'), "fUnderlineThickness" ->
+    let f = {ftype; fname; foffset = 48} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_fontmetrics_t"} as s'), "fCapHeight" ->
+    let f = {ftype; fname; foffset = 44} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_fontmetrics_t"} as s'), "fXHeight" ->
+    let f = {ftype; fname; foffset = 40} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_fontmetrics_t"} as s'), "fXMax" ->
+    let f = {ftype; fname; foffset = 36} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_fontmetrics_t"} as s'), "fXMin" ->
+    let f = {ftype; fname; foffset = 32} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_fontmetrics_t"} as s'), "fMaxCharWidth" ->
+    let f = {ftype; fname; foffset = 28} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_fontmetrics_t"} as s'), "fAvgCharWidth" ->
+    let f = {ftype; fname; foffset = 24} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_fontmetrics_t"} as s'), "fLeading" ->
+    let f = {ftype; fname; foffset = 20} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_fontmetrics_t"} as s'), "fBottom" ->
+    let f = {ftype; fname; foffset = 16} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_fontmetrics_t"} as s'), "fDescent" ->
+    let f = {ftype; fname; foffset = 12} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_fontmetrics_t"} as s'), "fAscent" ->
+    let f = {ftype; fname; foffset = 8} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_fontmetrics_t"} as s'), "fTop" ->
+    let f = {ftype; fname; foffset = 4} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | Struct ({ tag = "sk_fontmetrics_t"} as s'), "fFlags" ->
+    let f = {ftype; fname; foffset = 0} in 
+    (s'.fields <- BoxedField f :: s'.fields; f)
+  | View { ty }, _ ->
+    let { ftype; foffset; fname } = field ty fname ftype in
+    { ftype; foffset; fname }
+  | _ -> failwith ("Unexpected field "^ fname)
+
+let rec seal : type a. a typ -> unit = function
+  | Struct ({ tag = "gr_gl_framebufferinfo_t"; spec = Incomplete _ } as s') ->
+    s'.spec <- Complete { size = 8; align = 4 }
+  | Struct ({ tag = "sk_imageinfo_t"; spec = Incomplete _ } as s') ->
+    s'.spec <- Complete { size = 24; align = 8 }
+  | Struct ({ tag = "sk_rect_t"; spec = Incomplete _ } as s') ->
+    s'.spec <- Complete { size = 16; align = 4 }
+  | Struct ({ tag = "sk_irect_t"; spec = Incomplete _ } as s') ->
+    s'.spec <- Complete { size = 16; align = 4 }
+  | Struct ({ tag = "sk_matrix_t"; spec = Incomplete _ } as s') ->
+    s'.spec <- Complete { size = 36; align = 4 }
+  | Struct ({ tag = "sk_point_t"; spec = Incomplete _ } as s') ->
+    s'.spec <- Complete { size = 8; align = 4 }
+  | Struct ({ tag = "sk_fontmetrics_t"; spec = Incomplete _ } as s') ->
+    s'.spec <- Complete { size = 64; align = 4 }
+  | Struct { tag; spec = Complete _ } ->
+    raise (ModifyingSealedType tag)
+  | Union { utag; uspec = Some _ } ->
+    raise (ModifyingSealedType utag)
+  | View { ty } -> seal ty
+  | _ ->
+    raise (Unsupported "Sealing a non-structured type")
+
+type 'a const = 'a
+let constant (type t) name (t : t typ) : t = match t, name with
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "INTERSECT_SK_CLIPOP" ->
+    1L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "DIFFERENCE_SK_CLIPOP" ->
+    0L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "BOTTOM_LEFT_GR_SURFACE_ORIGIN" ->
+    1L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "TOP_LEFT_GR_SURFACE_ORIGIN" ->
+    0L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "RGB_V_SK_PIXELGEOMETRY" ->
+    3L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "RGB_V_SK_PIXELGEOMETRY" ->
+    3L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "BGR_H_SK_PIXELGEOMETRY" ->
+    2L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "RGB_H_SK_PIXELGEOMETRY" ->
+    1L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "UNKNOWN_SK_PIXELGEOMETRY" ->
+    0L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "UNPREMUL_SK_ALPHATYPE" ->
+    3L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "PREMUL_SK_ALPHATYPE" ->
+    2L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "OPAQUE_SK_ALPHATYPE" ->
+    1L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "UNKNOWN_SK_ALPHATYPE" ->
+    0L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "RGBA_F16_SK_COLORTYPE" ->
+    10L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "GRAY_8_SK_COLORTYPE" ->
+    9L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "RGB_101010X_SK_COLORTYPE" ->
+    8L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "RGBA_1010102_SK_COLORTYPE" ->
+    7L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "BGRA_8888_SK_COLORTYPE" ->
+    6L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "RGB_888X_SK_COLORTYPE" ->
+    5L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "RGBA_8888_SK_COLORTYPE" ->
+    4L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "ARGB_4444_SK_COLORTYPE" ->
+    3L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "RGB_565_SK_COLORTYPE" ->
+    2L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "ALPHA_8_SK_COLORTYPE" ->
+    1L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "UNKNOWN_SK_COLORTYPE" ->
+    0L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "CCW_SK_PATH_DIRECTION" ->
+    1L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "CW_SK_PATH_DIRECTION" ->
+    0L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "LOWER_LEFT_SK_RRECT_CORNER" ->
+    3L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "LOWER_RIGHT_SK_RRECT_CORNER" ->
+    2L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "UPPER_RIGHT_SK_RRECT_CORNER" ->
+    1L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "UPPER_LEFT_SK_RRECT_CORNER" ->
+    0L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "COMPLEX_SK_RRECT_TYPE" ->
+    5L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "NINE_PATCH_SK_RRECT_TYPE" ->
+    4L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "SIMPLE_SK_RRECT_TYPE" ->
+    3L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "OVAL_SK_RRECT_TYPE" ->
+    2L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "RECT_SK_RRECT_TYPE" ->
+    1L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "EMPTY_SK_RRECT_TYPE" ->
+    0L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "STROKE_AND_FILL_SK_PAINT_STYLE" ->
+    2L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "STROKE_SK_PAINT_STYLE" ->
+    1L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "FILL_SK_PAINT_STYLE" ->
+    0L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "DRAW_SHADOW_ONLY_SK_DROP_SHADOW_IMAGE_FILTER_SHADOW_MODE" ->
+    1L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "DRAW_SHADOW_AND_FOREGROUND_SK_DROP_SHADOW_IMAGE_FILTER_SHADOW_MODE" ->
+    0L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "OBLIQUE_SK_FONT_STYLE_SLANT" ->
+    2L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "ITALIC_SK_FONT_STYLE_SLANT" ->
+    1L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "UPRIGHT_SK_FONT_STYLE_SLANT" ->
+    0L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "GLYPH_ID_SK_TEXT_ENCODING" ->
+    3L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "UTF32_SK_TEXT_ENCODING" ->
+    2L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "UTF16_SK_TEXT_ENCODING" ->
+    1L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "UTF8_SK_TEXT_ENCODING" ->
+    0L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "FULL_HINTING_SK_PAINT_HINTING" ->
+    3L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "NORMAL_HINTING_SK_PAINT_HINTING" ->
+    2L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "SLIGHT_HINTING_SK_PAINT_HINTING" ->
+    1L
+  | Ctypes_static.Primitive Cstubs_internals.Int64_t, "NO_HINTING_SK_PAINT_HINTING" ->
+    0L
+  | _, s -> failwith ("unmatched constant: "^ s)
+
+let enum (type a) name ?typedef ?unexpected (alist : (a * int64) list) =
+  match name with
+  | "sk_clipop_t" -> 
+    Cstubs_internals.build_enum_type "sk_clipop_t" Ctypes_static.Uint32 ?typedef ?unexpected alist
+  | "gr_surfaceorigin_t" -> 
+    Cstubs_internals.build_enum_type "gr_surfaceorigin_t" Ctypes_static.Uint32 ?typedef ?unexpected alist
+  | "sk_pixelgeometry_t" -> 
+    Cstubs_internals.build_enum_type "sk_pixelgeometry_t" Ctypes_static.Uint32 ?typedef ?unexpected alist
+  | "sk_alphatype_t" -> 
+    Cstubs_internals.build_enum_type "sk_alphatype_t" Ctypes_static.Uint32 ?typedef ?unexpected alist
+  | "sk_colortype_t" -> 
+    Cstubs_internals.build_enum_type "sk_colortype_t" Ctypes_static.Uint32 ?typedef ?unexpected alist
+  | "sk_path_direction_t" -> 
+    Cstubs_internals.build_enum_type "sk_path_direction_t" Ctypes_static.Uint32 ?typedef ?unexpected alist
+  | "sk_rrect_corner_t" -> 
+    Cstubs_internals.build_enum_type "sk_rrect_corner_t" Ctypes_static.Uint32 ?typedef ?unexpected alist
+  | "sk_rrect_type_t" -> 
+    Cstubs_internals.build_enum_type "sk_rrect_type_t" Ctypes_static.Uint32 ?typedef ?unexpected alist
+  | "sk_paint_style_t" -> 
+    Cstubs_internals.build_enum_type "sk_paint_style_t" Ctypes_static.Uint32 ?typedef ?unexpected alist
+  | "sk_drop_shadow_image_filter_shadow_mode_t" -> 
+    Cstubs_internals.build_enum_type "sk_drop_shadow_image_filter_shadow_mode_t" Ctypes_static.Uint32 ?typedef ?unexpected alist
+  | "sk_font_style_slant_t" -> 
+    Cstubs_internals.build_enum_type "sk_font_style_slant_t" Ctypes_static.Uint32 ?typedef ?unexpected alist
+  | "sk_text_encoding_t" -> 
+    Cstubs_internals.build_enum_type "sk_text_encoding_t" Ctypes_static.Uint32 ?typedef ?unexpected alist
+  | "sk_paint_hinting_t" -> 
+    Cstubs_internals.build_enum_type "sk_paint_hinting_t" Ctypes_static.Uint32 ?typedef ?unexpected alist
+  | s ->
+    failwith ("unmatched enum: "^ s)
diff --git a/src/wrapped/lib/dune b/src/wrapped/lib/dune
index 1201c8f..d60c1d7 100644
--- a/src/wrapped/lib/dune
+++ b/src/wrapped/lib/dune
@@ -1,13 +1,3 @@
-(rule
- (targets skia_generated_stubs.ml)
- (deps ../stubgen/stubgen.exe)
- (action (with-stdout-to %{targets} (run %{deps} -ml))))
-
-(rule
- (targets skia_generated_stubs.c)
- (deps (:stubgen ../stubgen/stubgen.exe))
- (action (with-stdout-to %{targets} (run %{stubgen} -c))))
-
 (library
   (name SkiaWrapped)
   (flags (-w -40 -w +26))
diff --git a/src/wrapped/lib/skia_generated_stubs.c b/src/wrapped/lib/skia_generated_stubs.c
new file mode 100644
index 0000000..8f21bdb
--- /dev/null
+++ b/src/wrapped/lib/skia_generated_stubs.c
@@ -0,0 +1,1177 @@
+
+#include "c_stubs.h"
+#include "gr_context.h"
+#include "sk_canvas.h"
+#include "sk_data.h"
+#include "sk_image.h"
+#include "sk_imagefilter.h"
+#include "sk_paint.h"
+#include "sk_path.h"
+#include "sk_surface.h"
+#include "sk_rrect.h"
+#include "sk_matrix.h"
+#include "sk_typeface.h"
+
+#include "ctypes_cstubs_internals.h"
+value skia_wrapped_stub_1_sk_fontstyle_new(value x3, value x2, value x1)
+{
+   int x4 = Long_val(x3);
+   int x7 = Long_val(x2);
+   uint32_t x10 = Uint32_val(x1);
+   sk_fontstyle_t* x13 = sk_fontstyle_new(x4, x7, x10);
+   return CTYPES_FROM_PTR(x13);
+}
+value skia_wrapped_stub_2_sk_typeface_create_from_name_with_font_style
+     (value x15, value x14)
+{
+   char* x16 = CTYPES_ADDR_OF_FATPTR(x15);
+   sk_fontstyle_t* x17 = CTYPES_ADDR_OF_FATPTR(x14);
+   sk_typeface_t* x18 =
+   sk_typeface_create_from_name_with_font_style(x16, x17);
+   return CTYPES_FROM_PTR(x18);
+}
+value skia_wrapped_stub_3_sk_typeface_create_from_file(value x20, value x19)
+{
+   char* x21 = CTYPES_ADDR_OF_FATPTR(x20);
+   int x22 = Long_val(x19);
+   sk_typeface_t* x25 = sk_typeface_create_from_file(x21, x22);
+   return CTYPES_FROM_PTR(x25);
+}
+value skia_wrapped_stub_4_sk_imagefilter_unref(value x26)
+{
+   sk_imagefilter_t* x27 = CTYPES_ADDR_OF_FATPTR(x26);
+   sk_imagefilter_unref(x27);
+   return Val_unit;
+}
+value skia_wrapped_stub_5_sk_imagefilter_new_drop_shadow(value x36,
+                                                         value x35,
+                                                         value x34,
+                                                         value x33,
+                                                         value x32,
+                                                         value x31,
+                                                         value x30,
+                                                         value x29)
+{
+   double x37 = Double_val(x36);
+   double x40 = Double_val(x35);
+   double x43 = Double_val(x34);
+   double x46 = Double_val(x33);
+   uint32_t x49 = Uint32_val(x32);
+   uint32_t x52 = Uint32_val(x31);
+   sk_imagefilter_t* x55 = CTYPES_ADDR_OF_FATPTR(x30);
+   sk_imagefilter_croprect_t* x56 = CTYPES_ADDR_OF_FATPTR(x29);
+   sk_imagefilter_t* x57 =
+   sk_imagefilter_new_drop_shadow((float)x37, (float)x40, (float)x43,
+                                  (float)x46, x49, x52, x55, x56);
+   return CTYPES_FROM_PTR(x57);
+}
+value skia_wrapped_stub_5_sk_imagefilter_new_drop_shadow_byte8(value* argv,
+                                                               int argc)
+{
+   value x58 = argv[7];
+   value x59 = argv[6];
+   value x60 = argv[5];
+   value x61 = argv[4];
+   value x62 = argv[3];
+   value x63 = argv[2];
+   value x64 = argv[1];
+   value x65 = argv[0];
+   return
+     skia_wrapped_stub_5_sk_imagefilter_new_drop_shadow(x65, x64, x63, 
+                                                        x62, x61, x60, 
+                                                        x59, x58);
+}
+value skia_wrapped_stub_6_sk_paint_new(value x66)
+{
+   sk_paint_t* x67 = sk_paint_new();
+   return CTYPES_FROM_PTR(x67);
+}
+value skia_wrapped_stub_7_sk_paint_delete(value x68)
+{
+   sk_paint_t* x69 = CTYPES_ADDR_OF_FATPTR(x68);
+   sk_paint_delete(x69);
+   return Val_unit;
+}
+value skia_wrapped_stub_8_sk_paint_set_color(value x72, value x71)
+{
+   sk_paint_t* x73 = CTYPES_ADDR_OF_FATPTR(x72);
+   uint32_t x74 = Uint32_val(x71);
+   sk_paint_set_color(x73, x74);
+   return Val_unit;
+}
+value skia_wrapped_stub_9_sk_paint_set_antialias(value x79, value x78)
+{
+   sk_paint_t* x80 = CTYPES_ADDR_OF_FATPTR(x79);
+   _Bool x81 = Bool_val(x78);
+   sk_paint_set_antialias(x80, x81);
+   return Val_unit;
+}
+value skia_wrapped_stub_10_sk_paint_set_style(value x86, value x85)
+{
+   sk_paint_t* x87 = CTYPES_ADDR_OF_FATPTR(x86);
+   uint32_t x88 = Uint32_val(x85);
+   sk_paint_set_style(x87, x88);
+   return Val_unit;
+}
+value skia_wrapped_stub_11_sk_paint_set_stroke_width(value x93, value x92)
+{
+   sk_paint_t* x94 = CTYPES_ADDR_OF_FATPTR(x93);
+   double x95 = Double_val(x92);
+   sk_paint_set_stroke_width(x94, (float)x95);
+   return Val_unit;
+}
+value skia_wrapped_stub_12_sk_paint_set_typeface(value x100, value x99)
+{
+   sk_paint_t* x101 = CTYPES_ADDR_OF_FATPTR(x100);
+   sk_typeface_t* x102 = CTYPES_ADDR_OF_FATPTR(x99);
+   sk_paint_set_typeface(x101, x102);
+   return Val_unit;
+}
+value skia_wrapped_stub_13_sk_paint_set_lcd_render_text(value x105,
+                                                        value x104)
+{
+   sk_paint_t* x106 = CTYPES_ADDR_OF_FATPTR(x105);
+   _Bool x107 = Bool_val(x104);
+   sk_paint_set_lcd_render_text(x106, x107);
+   return Val_unit;
+}
+value skia_wrapped_stub_14_sk_paint_set_subpixel_text(value x112, value x111)
+{
+   sk_paint_t* x113 = CTYPES_ADDR_OF_FATPTR(x112);
+   _Bool x114 = Bool_val(x111);
+   sk_paint_set_subpixel_text(x113, x114);
+   return Val_unit;
+}
+value skia_wrapped_stub_15_sk_paint_set_textsize(value x119, value x118)
+{
+   sk_paint_t* x120 = CTYPES_ADDR_OF_FATPTR(x119);
+   double x121 = Double_val(x118);
+   sk_paint_set_textsize(x120, (float)x121);
+   return Val_unit;
+}
+value skia_wrapped_stub_16_sk_paint_get_fontmetrics(value x127, value x126,
+                                                    value x125)
+{
+   sk_paint_t* x128 = CTYPES_ADDR_OF_FATPTR(x127);
+   sk_fontmetrics_t* x129 = CTYPES_ADDR_OF_FATPTR(x126);
+   double x130 = Double_val(x125);
+   float x133 = sk_paint_get_fontmetrics(x128, x129, (float)x130);
+   return caml_copy_double(x133);
+}
+value skia_wrapped_stub_17_sk_paint_is_autohinted(value x134)
+{
+   sk_paint_t* x135 = CTYPES_ADDR_OF_FATPTR(x134);
+   _Bool x136 = sk_paint_is_autohinted(x135);
+   return Val_bool(x136);
+}
+value skia_wrapped_stub_18_sk_paint_set_autohinted(value x138, value x137)
+{
+   sk_paint_t* x139 = CTYPES_ADDR_OF_FATPTR(x138);
+   _Bool x140 = Bool_val(x137);
+   sk_paint_set_autohinted(x139, x140);
+   return Val_unit;
+}
+value skia_wrapped_stub_19_sk_paint_is_autohinted(value x144)
+{
+   sk_paint_t* x145 = CTYPES_ADDR_OF_FATPTR(x144);
+   _Bool x146 = sk_paint_is_autohinted(x145);
+   return Val_bool(x146);
+}
+value skia_wrapped_stub_20_sk_paint_get_hinting(value x147)
+{
+   sk_paint_t* x148 = CTYPES_ADDR_OF_FATPTR(x147);
+   sk_paint_hinting_t x149 = sk_paint_get_hinting(x148);
+   return integers_copy_uint32(x149);
+}
+value skia_wrapped_stub_21_sk_paint_set_hinting(value x151, value x150)
+{
+   sk_paint_t* x152 = CTYPES_ADDR_OF_FATPTR(x151);
+   uint32_t x153 = Uint32_val(x150);
+   sk_paint_set_hinting(x152, x153);
+   return Val_unit;
+}
+value skia_wrapped_stub_22_sk_paint_measure_text(value x160, value x159,
+                                                 value x158, value x157)
+{
+   sk_paint_t* x161 = CTYPES_ADDR_OF_FATPTR(x160);
+   char* x162 = CTYPES_ADDR_OF_FATPTR(x159);
+   int x163 = Long_val(x158);
+   sk_rect_t* x166 = CTYPES_ADDR_OF_FATPTR(x157);
+   float x167 = sk_paint_measure_text(x161, x162, x163, x166);
+   return caml_copy_double(x167);
+}
+value skia_wrapped_stub_23_sk_paint_set_imagefilter(value x169, value x168)
+{
+   sk_paint_t* x170 = CTYPES_ADDR_OF_FATPTR(x169);
+   sk_imagefilter_t* x171 = CTYPES_ADDR_OF_FATPTR(x168);
+   sk_paint_set_imagefilter(x170, x171);
+   return Val_unit;
+}
+value skia_wrapped_stub_24_sk_paint_get_text_encoding(value x173)
+{
+   sk_paint_t* x174 = CTYPES_ADDR_OF_FATPTR(x173);
+   sk_text_encoding_t x175 = sk_paint_get_text_encoding(x174);
+   return integers_copy_uint32(x175);
+}
+value skia_wrapped_stub_25_sk_paint_set_text_encoding(value x177, value x176)
+{
+   sk_paint_t* x178 = CTYPES_ADDR_OF_FATPTR(x177);
+   uint32_t x179 = Uint32_val(x176);
+   sk_paint_set_text_encoding(x178, x179);
+   return Val_unit;
+}
+value skia_wrapped_stub_26_sk_matrix_try_invert(value x184, value x183)
+{
+   sk_matrix_t* x185 = CTYPES_ADDR_OF_FATPTR(x184);
+   sk_matrix_t* x186 = CTYPES_ADDR_OF_FATPTR(x183);
+   _Bool x187 = sk_matrix_try_invert(x185, x186);
+   return Val_bool(x187);
+}
+value skia_wrapped_stub_27_sk_matrix_concat(value x190, value x189,
+                                            value x188)
+{
+   sk_matrix_t* x191 = CTYPES_ADDR_OF_FATPTR(x190);
+   sk_matrix_t* x192 = CTYPES_ADDR_OF_FATPTR(x189);
+   sk_matrix_t* x193 = CTYPES_ADDR_OF_FATPTR(x188);
+   sk_matrix_concat(x191, x192, x193);
+   return Val_unit;
+}
+value skia_wrapped_stub_28_sk_matrix_pre_concat(value x196, value x195)
+{
+   sk_matrix_t* x197 = CTYPES_ADDR_OF_FATPTR(x196);
+   sk_matrix_t* x198 = CTYPES_ADDR_OF_FATPTR(x195);
+   sk_matrix_pre_concat(x197, x198);
+   return Val_unit;
+}
+value skia_wrapped_stub_29_sk_matrix_post_concat(value x201, value x200)
+{
+   sk_matrix_t* x202 = CTYPES_ADDR_OF_FATPTR(x201);
+   sk_matrix_t* x203 = CTYPES_ADDR_OF_FATPTR(x200);
+   sk_matrix_post_concat(x202, x203);
+   return Val_unit;
+}
+value skia_wrapped_stub_30_sk_matrix_map_rect(value x207, value x206,
+                                              value x205)
+{
+   sk_matrix_t* x208 = CTYPES_ADDR_OF_FATPTR(x207);
+   sk_rect_t* x209 = CTYPES_ADDR_OF_FATPTR(x206);
+   sk_rect_t* x210 = CTYPES_ADDR_OF_FATPTR(x205);
+   sk_matrix_map_rect(x208, x209, x210);
+   return Val_unit;
+}
+value skia_wrapped_stub_31_sk_matrix_map_points(value x215, value x214,
+                                                value x213, value x212)
+{
+   sk_matrix_t* x216 = CTYPES_ADDR_OF_FATPTR(x215);
+   sk_point_t* x217 = CTYPES_ADDR_OF_FATPTR(x214);
+   sk_point_t* x218 = CTYPES_ADDR_OF_FATPTR(x213);
+   int x219 = Long_val(x212);
+   sk_matrix_map_points(x216, x217, x218, x219);
+   return Val_unit;
+}
+value skia_wrapped_stub_32_sk_matrix_map_vectors(value x226, value x225,
+                                                 value x224, value x223)
+{
+   sk_matrix_t* x227 = CTYPES_ADDR_OF_FATPTR(x226);
+   sk_point_t* x228 = CTYPES_ADDR_OF_FATPTR(x225);
+   sk_point_t* x229 = CTYPES_ADDR_OF_FATPTR(x224);
+   int x230 = Long_val(x223);
+   sk_matrix_map_vectors(x227, x228, x229, x230);
+   return Val_unit;
+}
+value skia_wrapped_stub_33_sk_matrix_map_xy(value x237, value x236,
+                                            value x235, value x234)
+{
+   sk_matrix_t* x238 = CTYPES_ADDR_OF_FATPTR(x237);
+   double x239 = Double_val(x236);
+   double x242 = Double_val(x235);
+   sk_point_t* x245 = CTYPES_ADDR_OF_FATPTR(x234);
+   sk_matrix_map_xy(x238, (float)x239, (float)x242, x245);
+   return Val_unit;
+}
+value skia_wrapped_stub_34_sk_matrix_map_vector(value x250, value x249,
+                                                value x248, value x247)
+{
+   sk_matrix_t* x251 = CTYPES_ADDR_OF_FATPTR(x250);
+   double x252 = Double_val(x249);
+   double x255 = Double_val(x248);
+   sk_point_t* x258 = CTYPES_ADDR_OF_FATPTR(x247);
+   sk_matrix_map_vector(x251, (float)x252, (float)x255, x258);
+   return Val_unit;
+}
+value skia_wrapped_stub_35_sk_matrix_map_radius(value x261, value x260)
+{
+   sk_matrix_t* x262 = CTYPES_ADDR_OF_FATPTR(x261);
+   double x263 = Double_val(x260);
+   float x266 = sk_matrix_map_radius(x262, (float)x263);
+   return caml_copy_double(x266);
+}
+value skia_wrapped_stub_36_sk_matrix44_new(value x267)
+{
+   sk_matrix44_t* x268 = sk_matrix44_new();
+   return CTYPES_FROM_PTR(x268);
+}
+value skia_wrapped_stub_37_sk_matrix44_new_identity(value x269)
+{
+   sk_matrix44_t* x270 = sk_matrix44_new_identity();
+   return CTYPES_FROM_PTR(x270);
+}
+value skia_wrapped_stub_38_sk_matrix44_destroy(value x271)
+{
+   sk_matrix44_t* x272 = CTYPES_ADDR_OF_FATPTR(x271);
+   sk_matrix44_destroy(x272);
+   return Val_unit;
+}
+value skia_wrapped_stub_39_sk_matrix44_set_rotate_about_degrees(value x278,
+                                                                value x277,
+                                                                value x276,
+                                                                value x275,
+                                                                value x274)
+{
+   sk_matrix44_t* x279 = CTYPES_ADDR_OF_FATPTR(x278);
+   double x280 = Double_val(x277);
+   double x283 = Double_val(x276);
+   double x286 = Double_val(x275);
+   double x289 = Double_val(x274);
+   sk_matrix44_set_rotate_about_degrees(x279, (float)x280, (float)x283,
+                                        (float)x286, (float)x289);
+   return Val_unit;
+}
+value skia_wrapped_stub_40_sk_matrix44_set_rotate_about_radians(value x297,
+                                                                value x296,
+                                                                value x295,
+                                                                value x294,
+                                                                value x293)
+{
+   sk_matrix44_t* x298 = CTYPES_ADDR_OF_FATPTR(x297);
+   double x299 = Double_val(x296);
+   double x302 = Double_val(x295);
+   double x305 = Double_val(x294);
+   double x308 = Double_val(x293);
+   sk_matrix44_set_rotate_about_radians(x298, (float)x299, (float)x302,
+                                        (float)x305, (float)x308);
+   return Val_unit;
+}
+value skia_wrapped_stub_41_sk_matrix44_set_translate(value x315, value x314,
+                                                     value x313, value x312)
+{
+   sk_matrix44_t* x316 = CTYPES_ADDR_OF_FATPTR(x315);
+   double x317 = Double_val(x314);
+   double x320 = Double_val(x313);
+   double x323 = Double_val(x312);
+   sk_matrix44_set_translate(x316, (float)x317, (float)x320, (float)x323);
+   return Val_unit;
+}
+value skia_wrapped_stub_42_sk_matrix44_pre_translate(value x330, value x329,
+                                                     value x328, value x327)
+{
+   sk_matrix44_t* x331 = CTYPES_ADDR_OF_FATPTR(x330);
+   double x332 = Double_val(x329);
+   double x335 = Double_val(x328);
+   double x338 = Double_val(x327);
+   sk_matrix44_pre_translate(x331, (float)x332, (float)x335, (float)x338);
+   return Val_unit;
+}
+value skia_wrapped_stub_43_sk_matrix44_post_translate(value x345, value x344,
+                                                      value x343, value x342)
+{
+   sk_matrix44_t* x346 = CTYPES_ADDR_OF_FATPTR(x345);
+   double x347 = Double_val(x344);
+   double x350 = Double_val(x343);
+   double x353 = Double_val(x342);
+   sk_matrix44_post_translate(x346, (float)x347, (float)x350, (float)x353);
+   return Val_unit;
+}
+value skia_wrapped_stub_44_sk_matrix44_set_scale(value x360, value x359,
+                                                 value x358, value x357)
+{
+   sk_matrix44_t* x361 = CTYPES_ADDR_OF_FATPTR(x360);
+   double x362 = Double_val(x359);
+   double x365 = Double_val(x358);
+   double x368 = Double_val(x357);
+   sk_matrix44_set_scale(x361, (float)x362, (float)x365, (float)x368);
+   return Val_unit;
+}
+value skia_wrapped_stub_45_sk_matrix44_pre_scale(value x375, value x374,
+                                                 value x373, value x372)
+{
+   sk_matrix44_t* x376 = CTYPES_ADDR_OF_FATPTR(x375);
+   double x377 = Double_val(x374);
+   double x380 = Double_val(x373);
+   double x383 = Double_val(x372);
+   sk_matrix44_pre_scale(x376, (float)x377, (float)x380, (float)x383);
+   return Val_unit;
+}
+value skia_wrapped_stub_46_sk_matrix44_post_scale(value x390, value x389,
+                                                  value x388, value x387)
+{
+   sk_matrix44_t* x391 = CTYPES_ADDR_OF_FATPTR(x390);
+   double x392 = Double_val(x389);
+   double x395 = Double_val(x388);
+   double x398 = Double_val(x387);
+   sk_matrix44_post_scale(x391, (float)x392, (float)x395, (float)x398);
+   return Val_unit;
+}
+value skia_wrapped_stub_47_sk_matrix44_set_concat(value x404, value x403,
+                                                  value x402)
+{
+   sk_matrix44_t* x405 = CTYPES_ADDR_OF_FATPTR(x404);
+   sk_matrix44_t* x406 = CTYPES_ADDR_OF_FATPTR(x403);
+   sk_matrix44_t* x407 = CTYPES_ADDR_OF_FATPTR(x402);
+   sk_matrix44_set_concat(x405, x406, x407);
+   return Val_unit;
+}
+value skia_wrapped_stub_48_sk_matrix44_pre_concat(value x410, value x409)
+{
+   sk_matrix44_t* x411 = CTYPES_ADDR_OF_FATPTR(x410);
+   sk_matrix44_t* x412 = CTYPES_ADDR_OF_FATPTR(x409);
+   sk_matrix44_pre_concat(x411, x412);
+   return Val_unit;
+}
+value skia_wrapped_stub_49_sk_matrix44_post_concat(value x415, value x414)
+{
+   sk_matrix44_t* x416 = CTYPES_ADDR_OF_FATPTR(x415);
+   sk_matrix44_t* x417 = CTYPES_ADDR_OF_FATPTR(x414);
+   sk_matrix44_post_concat(x416, x417);
+   return Val_unit;
+}
+value skia_wrapped_stub_50_sk_matrix44_get(value x421, value x420,
+                                           value x419)
+{
+   sk_matrix44_t* x422 = CTYPES_ADDR_OF_FATPTR(x421);
+   int x423 = Long_val(x420);
+   int x426 = Long_val(x419);
+   float x429 = sk_matrix44_get(x422, x423, x426);
+   return caml_copy_double(x429);
+}
+value skia_wrapped_stub_51_sk_matrix44_set(value x433, value x432,
+                                           value x431, value x430)
+{
+   sk_matrix44_t* x434 = CTYPES_ADDR_OF_FATPTR(x433);
+   int x435 = Long_val(x432);
+   int x438 = Long_val(x431);
+   double x441 = Double_val(x430);
+   sk_matrix44_set(x434, x435, x438, (float)x441);
+   return Val_unit;
+}
+value skia_wrapped_stub_52_sk_matrix44_to_matrix(value x446, value x445)
+{
+   sk_matrix44_t* x447 = CTYPES_ADDR_OF_FATPTR(x446);
+   sk_matrix_t* x448 = CTYPES_ADDR_OF_FATPTR(x445);
+   sk_matrix44_to_matrix(x447, x448);
+   return Val_unit;
+}
+value skia_wrapped_stub_53_sk_rrect_new(value x450)
+{
+   sk_rrect_t* x451 = sk_rrect_new();
+   return CTYPES_FROM_PTR(x451);
+}
+value skia_wrapped_stub_54_sk_rrect_new_copy(value x452)
+{
+   sk_rrect_t* x453 = CTYPES_ADDR_OF_FATPTR(x452);
+   sk_rrect_t* x454 = sk_rrect_new_copy(x453);
+   return CTYPES_FROM_PTR(x454);
+}
+value skia_wrapped_stub_55_sk_rrect_delete(value x455)
+{
+   sk_rrect_t* x456 = CTYPES_ADDR_OF_FATPTR(x455);
+   sk_rrect_delete(x456);
+   return Val_unit;
+}
+value skia_wrapped_stub_56_sk_rrect_get_type(value x458)
+{
+   sk_rrect_t* x459 = CTYPES_ADDR_OF_FATPTR(x458);
+   sk_rrect_type_t x460 = sk_rrect_get_type(x459);
+   return integers_copy_uint32(x460);
+}
+value skia_wrapped_stub_57_sk_rrect_get_rect(value x462, value x461)
+{
+   sk_rrect_t* x463 = CTYPES_ADDR_OF_FATPTR(x462);
+   sk_rect_t* x464 = CTYPES_ADDR_OF_FATPTR(x461);
+   sk_rrect_get_rect(x463, x464);
+   return Val_unit;
+}
+value skia_wrapped_stub_58_sk_rrect_get_radii(value x468, value x467,
+                                              value x466)
+{
+   sk_rrect_t* x469 = CTYPES_ADDR_OF_FATPTR(x468);
+   uint32_t x470 = Uint32_val(x467);
+   sk_point_t* x473 = CTYPES_ADDR_OF_FATPTR(x466);
+   sk_rrect_get_radii(x469, x470, x473);
+   return Val_unit;
+}
+value skia_wrapped_stub_59_sk_rrect_get_width(value x475)
+{
+   sk_rrect_t* x476 = CTYPES_ADDR_OF_FATPTR(x475);
+   float x477 = sk_rrect_get_width(x476);
+   return caml_copy_double(x477);
+}
+value skia_wrapped_stub_60_sk_rrect_get_height(value x478)
+{
+   sk_rrect_t* x479 = CTYPES_ADDR_OF_FATPTR(x478);
+   float x480 = sk_rrect_get_height(x479);
+   return caml_copy_double(x480);
+}
+value skia_wrapped_stub_61_sk_rrect_set_empty(value x481)
+{
+   sk_rrect_t* x482 = CTYPES_ADDR_OF_FATPTR(x481);
+   sk_rrect_set_empty(x482);
+   return Val_unit;
+}
+value skia_wrapped_stub_62_sk_rrect_set_rect(value x485, value x484)
+{
+   sk_rrect_t* x486 = CTYPES_ADDR_OF_FATPTR(x485);
+   sk_rect_t* x487 = CTYPES_ADDR_OF_FATPTR(x484);
+   sk_rrect_set_rect(x486, x487);
+   return Val_unit;
+}
+value skia_wrapped_stub_63_sk_rrect_set_oval(value x490, value x489)
+{
+   sk_rrect_t* x491 = CTYPES_ADDR_OF_FATPTR(x490);
+   sk_rect_t* x492 = CTYPES_ADDR_OF_FATPTR(x489);
+   sk_rrect_set_oval(x491, x492);
+   return Val_unit;
+}
+value skia_wrapped_stub_64_sk_rrect_set_rect_xy(value x497, value x496,
+                                                value x495, value x494)
+{
+   sk_rrect_t* x498 = CTYPES_ADDR_OF_FATPTR(x497);
+   sk_rect_t* x499 = CTYPES_ADDR_OF_FATPTR(x496);
+   double x500 = Double_val(x495);
+   double x503 = Double_val(x494);
+   sk_rrect_set_rect_xy(x498, x499, (float)x500, (float)x503);
+   return Val_unit;
+}
+value skia_wrapped_stub_65_sk_rrect_set_nine_patch(value x512, value x511,
+                                                   value x510, value x509,
+                                                   value x508, value x507)
+{
+   sk_rrect_t* x513 = CTYPES_ADDR_OF_FATPTR(x512);
+   sk_rect_t* x514 = CTYPES_ADDR_OF_FATPTR(x511);
+   double x515 = Double_val(x510);
+   double x518 = Double_val(x509);
+   double x521 = Double_val(x508);
+   double x524 = Double_val(x507);
+   sk_rrect_set_nine_patch(x513, x514, (float)x515, (float)x518, (float)x521,
+                           (float)x524);
+   return Val_unit;
+}
+value skia_wrapped_stub_65_sk_rrect_set_nine_patch_byte6(value* argv,
+                                                         int argc)
+{
+   value x528 = argv[5];
+   value x529 = argv[4];
+   value x530 = argv[3];
+   value x531 = argv[2];
+   value x532 = argv[1];
+   value x533 = argv[0];
+   return
+     skia_wrapped_stub_65_sk_rrect_set_nine_patch(x533, x532, x531, x530,
+                                                  x529, x528);
+}
+value skia_wrapped_stub_66_sk_rrect_set_rect_radii(value x536, value x535,
+                                                   value x534)
+{
+   sk_rrect_t* x537 = CTYPES_ADDR_OF_FATPTR(x536);
+   sk_rect_t* x538 = CTYPES_ADDR_OF_FATPTR(x535);
+   sk_point_t* x539 = CTYPES_ADDR_OF_FATPTR(x534);
+   sk_rrect_set_rect_radii(x537, x538, x539);
+   return Val_unit;
+}
+value skia_wrapped_stub_67_sk_rrect_inset(value x543, value x542, value x541)
+{
+   sk_rrect_t* x544 = CTYPES_ADDR_OF_FATPTR(x543);
+   double x545 = Double_val(x542);
+   double x548 = Double_val(x541);
+   sk_rrect_inset(x544, (float)x545, (float)x548);
+   return Val_unit;
+}
+value skia_wrapped_stub_68_sk_rrect_outset(value x554, value x553,
+                                           value x552)
+{
+   sk_rrect_t* x555 = CTYPES_ADDR_OF_FATPTR(x554);
+   double x556 = Double_val(x553);
+   double x559 = Double_val(x552);
+   sk_rrect_outset(x555, (float)x556, (float)x559);
+   return Val_unit;
+}
+value skia_wrapped_stub_69_sk_rrect_offset(value x565, value x564,
+                                           value x563)
+{
+   sk_rrect_t* x566 = CTYPES_ADDR_OF_FATPTR(x565);
+   double x567 = Double_val(x564);
+   double x570 = Double_val(x563);
+   sk_rrect_offset(x566, (float)x567, (float)x570);
+   return Val_unit;
+}
+value skia_wrapped_stub_70_sk_rrect_contains(value x575, value x574)
+{
+   sk_rrect_t* x576 = CTYPES_ADDR_OF_FATPTR(x575);
+   sk_rect_t* x577 = CTYPES_ADDR_OF_FATPTR(x574);
+   _Bool x578 = sk_rrect_contains(x576, x577);
+   return Val_bool(x578);
+}
+value skia_wrapped_stub_71_sk_rrect_is_valid(value x579)
+{
+   sk_rrect_t* x580 = CTYPES_ADDR_OF_FATPTR(x579);
+   _Bool x581 = sk_rrect_is_valid(x580);
+   return Val_bool(x581);
+}
+value skia_wrapped_stub_72_sk_rrect_transform(value x584, value x583,
+                                              value x582)
+{
+   sk_rrect_t* x585 = CTYPES_ADDR_OF_FATPTR(x584);
+   sk_matrix_t* x586 = CTYPES_ADDR_OF_FATPTR(x583);
+   sk_rrect_t* x587 = CTYPES_ADDR_OF_FATPTR(x582);
+   _Bool x588 = sk_rrect_transform(x585, x586, x587);
+   return Val_bool(x588);
+}
+value skia_wrapped_stub_73_sk_path_new(value x589)
+{
+   sk_path_t* x590 = sk_path_new();
+   return CTYPES_FROM_PTR(x590);
+}
+value skia_wrapped_stub_74_sk_path_delete(value x591)
+{
+   sk_path_t* x592 = CTYPES_ADDR_OF_FATPTR(x591);
+   sk_path_delete(x592);
+   return Val_unit;
+}
+value skia_wrapped_stub_75_sk_path_add_rounded_rect(value x598, value x597,
+                                                    value x596, value x595,
+                                                    value x594)
+{
+   sk_path_t* x599 = CTYPES_ADDR_OF_FATPTR(x598);
+   sk_rect_t* x600 = CTYPES_ADDR_OF_FATPTR(x597);
+   double x601 = Double_val(x596);
+   double x604 = Double_val(x595);
+   uint32_t x607 = Uint32_val(x594);
+   sk_path_add_rounded_rect(x599, x600, (float)x601, (float)x604, x607);
+   return Val_unit;
+}
+value skia_wrapped_stub_76_sk_path_add_circle(value x615, value x614,
+                                              value x613, value x612,
+                                              value x611)
+{
+   sk_path_t* x616 = CTYPES_ADDR_OF_FATPTR(x615);
+   double x617 = Double_val(x614);
+   double x620 = Double_val(x613);
+   double x623 = Double_val(x612);
+   uint32_t x626 = Uint32_val(x611);
+   sk_path_add_circle(x616, (float)x617, (float)x620, (float)x623, x626);
+   return Val_unit;
+}
+value skia_wrapped_stub_77_sk_path_move_to(value x632, value x631,
+                                           value x630)
+{
+   sk_path_t* x633 = CTYPES_ADDR_OF_FATPTR(x632);
+   double x634 = Double_val(x631);
+   double x637 = Double_val(x630);
+   sk_path_move_to(x633, (float)x634, (float)x637);
+   return Val_unit;
+}
+value skia_wrapped_stub_78_sk_path_line_to(value x643, value x642,
+                                           value x641)
+{
+   sk_path_t* x644 = CTYPES_ADDR_OF_FATPTR(x643);
+   double x645 = Double_val(x642);
+   double x648 = Double_val(x641);
+   sk_path_line_to(x644, (float)x645, (float)x648);
+   return Val_unit;
+}
+value skia_wrapped_stub_79_sk_path_cubic_to(value x658, value x657,
+                                            value x656, value x655,
+                                            value x654, value x653,
+                                            value x652)
+{
+   sk_path_t* x659 = CTYPES_ADDR_OF_FATPTR(x658);
+   double x660 = Double_val(x657);
+   double x663 = Double_val(x656);
+   double x666 = Double_val(x655);
+   double x669 = Double_val(x654);
+   double x672 = Double_val(x653);
+   double x675 = Double_val(x652);
+   sk_path_cubic_to(x659, (float)x660, (float)x663, (float)x666, (float)x669,
+                    (float)x672, (float)x675);
+   return Val_unit;
+}
+value skia_wrapped_stub_79_sk_path_cubic_to_byte7(value* argv, int argc)
+{
+   value x679 = argv[6];
+   value x680 = argv[5];
+   value x681 = argv[4];
+   value x682 = argv[3];
+   value x683 = argv[2];
+   value x684 = argv[1];
+   value x685 = argv[0];
+   return
+     skia_wrapped_stub_79_sk_path_cubic_to(x685, x684, x683, x682, x681,
+                                           x680, x679);
+}
+value skia_wrapped_stub_80_sk_path_close(value x686)
+{
+   sk_path_t* x687 = CTYPES_ADDR_OF_FATPTR(x686);
+   sk_path_close(x687);
+   return Val_unit;
+}
+value skia_wrapped_stub_81_sk_data_new_from_file(value x689)
+{
+   char* x690 = CTYPES_ADDR_OF_FATPTR(x689);
+   sk_data_t* x691 = sk_data_new_from_file(x690);
+   return CTYPES_FROM_PTR(x691);
+}
+value skia_wrapped_stub_82_sk_data_unref(value x692)
+{
+   sk_data_t* x693 = CTYPES_ADDR_OF_FATPTR(x692);
+   sk_data_unref(x693);
+   return Val_unit;
+}
+value skia_wrapped_stub_83_sk_data_get_data(value x695)
+{
+   sk_data_t* x696 = CTYPES_ADDR_OF_FATPTR(x695);
+   void* x697 = sk_data_get_data(x696);
+   return CTYPES_FROM_PTR(x697);
+}
+value skia_wrapped_stub_84_sk_data_get_size(value x698)
+{
+   sk_data_t* x699 = CTYPES_ADDR_OF_FATPTR(x698);
+   size_t x700 = sk_data_get_size(x699);
+   return ctypes_copy_size_t(x700);
+}
+value skia_wrapped_stub_85_sk_image_new_from_encoded(value x702, value x701)
+{
+   sk_data_t* x703 = CTYPES_ADDR_OF_FATPTR(x702);
+   sk_irect_t* x704 = CTYPES_ADDR_OF_FATPTR(x701);
+   sk_image_t* x705 = sk_image_new_from_encoded(x703, x704);
+   return CTYPES_FROM_PTR(x705);
+}
+value skia_wrapped_stub_86_sk_image_unref(value x706)
+{
+   sk_image_t* x707 = CTYPES_ADDR_OF_FATPTR(x706);
+   sk_image_unref(x707);
+   return Val_unit;
+}
+value skia_wrapped_stub_87_sk_image_encode(value x709)
+{
+   sk_image_t* x710 = CTYPES_ADDR_OF_FATPTR(x709);
+   sk_data_t* x711 = sk_image_encode(x710);
+   return CTYPES_FROM_PTR(x711);
+}
+value skia_wrapped_stub_88_gr_glinterface_create_native_interface(value x712)
+{
+   gr_glinterface_t* x713 = gr_glinterface_create_native_interface();
+   return CTYPES_FROM_PTR(x713);
+}
+value skia_wrapped_stub_89_reason_skia_make_sdl2_interface(value x714)
+{
+   gr_glinterface_t* x715 = reason_skia_make_sdl2_interface();
+   return CTYPES_FROM_PTR(x715);
+}
+value skia_wrapped_stub_90_gr_context_make_gl(value x716)
+{
+   gr_glinterface_t* x717 = CTYPES_ADDR_OF_FATPTR(x716);
+   gr_context_t* x718 = gr_context_make_gl(x717);
+   return CTYPES_FROM_PTR(x718);
+}
+value skia_wrapped_stub_91_gr_backendrendertarget_new_gl(value x723,
+                                                         value x722,
+                                                         value x721,
+                                                         value x720,
+                                                         value x719)
+{
+   int x724 = Long_val(x723);
+   int x727 = Long_val(x722);
+   int x730 = Long_val(x721);
+   int x733 = Long_val(x720);
+   gr_gl_framebufferinfo_t* x736 = CTYPES_ADDR_OF_FATPTR(x719);
+   gr_backendrendertarget_t* x737 =
+   gr_backendrendertarget_new_gl(x724, x727, x730, x733, x736);
+   return CTYPES_FROM_PTR(x737);
+}
+value skia_wrapped_stub_92_sk_canvas_clear(value x739, value x738)
+{
+   sk_canvas_t* x740 = CTYPES_ADDR_OF_FATPTR(x739);
+   uint32_t x741 = Uint32_val(x738);
+   sk_canvas_clear(x740, x741);
+   return Val_unit;
+}
+value skia_wrapped_stub_93_sk_canvas_draw_paint(value x746, value x745)
+{
+   sk_canvas_t* x747 = CTYPES_ADDR_OF_FATPTR(x746);
+   sk_paint_t* x748 = CTYPES_ADDR_OF_FATPTR(x745);
+   sk_canvas_draw_paint(x747, x748);
+   return Val_unit;
+}
+value skia_wrapped_stub_94_sk_canvas_draw_rect(value x752, value x751,
+                                               value x750)
+{
+   sk_canvas_t* x753 = CTYPES_ADDR_OF_FATPTR(x752);
+   sk_rect_t* x754 = CTYPES_ADDR_OF_FATPTR(x751);
+   sk_paint_t* x755 = CTYPES_ADDR_OF_FATPTR(x750);
+   sk_canvas_draw_rect(x753, x754, x755);
+   return Val_unit;
+}
+value skia_wrapped_stub_95_reason_skia_stub_sk_canvas_draw_rect_ltwh(
+                                                                    value x762,
+                                                                    value x761,
+                                                                    value x760,
+                                                                    value x759,
+                                                                    value x758,
+                                                                    value x757)
+{
+   sk_canvas_t* x763 = CTYPES_ADDR_OF_FATPTR(x762);
+   double x764 = Double_val(x761);
+   double x767 = Double_val(x760);
+   double x770 = Double_val(x759);
+   double x773 = Double_val(x758);
+   sk_paint_t* x776 = CTYPES_ADDR_OF_FATPTR(x757);
+   reason_skia_stub_sk_canvas_draw_rect_ltwh(x763, (float)x764, (float)x767,
+                                             (float)x770, (float)x773, 
+                                             x776);
+   return Val_unit;
+}
+value skia_wrapped_stub_95_reason_skia_stub_sk_canvas_draw_rect_ltwh_byte6
+     (value* argv, int argc)
+{
+   value x778 = argv[5];
+   value x779 = argv[4];
+   value x780 = argv[3];
+   value x781 = argv[2];
+   value x782 = argv[1];
+   value x783 = argv[0];
+   return
+     skia_wrapped_stub_95_reason_skia_stub_sk_canvas_draw_rect_ltwh(x783,
+                                                                    x782,
+                                                                    x781,
+                                                                    x780,
+                                                                    x779,
+                                                                    x778);
+}
+value skia_wrapped_stub_96_sk_canvas_draw_oval(value x786, value x785,
+                                               value x784)
+{
+   sk_canvas_t* x787 = CTYPES_ADDR_OF_FATPTR(x786);
+   sk_rect_t* x788 = CTYPES_ADDR_OF_FATPTR(x785);
+   sk_paint_t* x789 = CTYPES_ADDR_OF_FATPTR(x784);
+   sk_canvas_draw_oval(x787, x788, x789);
+   return Val_unit;
+}
+value skia_wrapped_stub_97_sk_canvas_draw_circle(value x795, value x794,
+                                                 value x793, value x792,
+                                                 value x791)
+{
+   sk_canvas_t* x796 = CTYPES_ADDR_OF_FATPTR(x795);
+   double x797 = Double_val(x794);
+   double x800 = Double_val(x793);
+   double x803 = Double_val(x792);
+   sk_paint_t* x806 = CTYPES_ADDR_OF_FATPTR(x791);
+   sk_canvas_draw_circle(x796, (float)x797, (float)x800, (float)x803, x806);
+   return Val_unit;
+}
+value skia_wrapped_stub_98_sk_canvas_draw_rrect(value x810, value x809,
+                                                value x808)
+{
+   sk_canvas_t* x811 = CTYPES_ADDR_OF_FATPTR(x810);
+   sk_rrect_t* x812 = CTYPES_ADDR_OF_FATPTR(x809);
+   sk_paint_t* x813 = CTYPES_ADDR_OF_FATPTR(x808);
+   sk_canvas_draw_rrect(x811, x812, x813);
+   return Val_unit;
+}
+value skia_wrapped_stub_99_sk_canvas_draw_path(value x817, value x816,
+                                               value x815)
+{
+   sk_canvas_t* x818 = CTYPES_ADDR_OF_FATPTR(x817);
+   sk_path_t* x819 = CTYPES_ADDR_OF_FATPTR(x816);
+   sk_paint_t* x820 = CTYPES_ADDR_OF_FATPTR(x815);
+   sk_canvas_draw_path(x818, x819, x820);
+   return Val_unit;
+}
+value skia_wrapped_stub_100_sk_canvas_draw_text(value x827, value x826,
+                                                value x825, value x824,
+                                                value x823, value x822)
+{
+   sk_canvas_t* x828 = CTYPES_ADDR_OF_FATPTR(x827);
+   char* x829 = CTYPES_ADDR_OF_FATPTR(x826);
+   int x830 = Long_val(x825);
+   double x833 = Double_val(x824);
+   double x836 = Double_val(x823);
+   sk_paint_t* x839 = CTYPES_ADDR_OF_FATPTR(x822);
+   sk_canvas_draw_text(x828, x829, x830, (float)x833, (float)x836, x839);
+   return Val_unit;
+}
+value skia_wrapped_stub_100_sk_canvas_draw_text_byte6(value* argv, int argc)
+{
+   value x841 = argv[5];
+   value x842 = argv[4];
+   value x843 = argv[3];
+   value x844 = argv[2];
+   value x845 = argv[1];
+   value x846 = argv[0];
+   return
+     skia_wrapped_stub_100_sk_canvas_draw_text(x846, x845, x844, x843, 
+                                               x842, x841);
+}
+value skia_wrapped_stub_101_sk_canvas_draw_image(value x851, value x850,
+                                                 value x849, value x848,
+                                                 value x847)
+{
+   sk_canvas_t* x852 = CTYPES_ADDR_OF_FATPTR(x851);
+   sk_image_t* x853 = CTYPES_ADDR_OF_FATPTR(x850);
+   double x854 = Double_val(x849);
+   double x857 = Double_val(x848);
+   sk_paint_t* x860 = CTYPES_ADDR_OF_FATPTR(x847);
+   sk_canvas_draw_image(x852, x853, (float)x854, (float)x857, x860);
+   return Val_unit;
+}
+value skia_wrapped_stub_102_sk_canvas_draw_image_rect(value x866, value x865,
+                                                      value x864, value x863,
+                                                      value x862)
+{
+   sk_canvas_t* x867 = CTYPES_ADDR_OF_FATPTR(x866);
+   sk_image_t* x868 = CTYPES_ADDR_OF_FATPTR(x865);
+   sk_rect_t* x869 = CTYPES_ADDR_OF_FATPTR(x864);
+   sk_rect_t* x870 = CTYPES_ADDR_OF_FATPTR(x863);
+   sk_paint_t* x871 = CTYPES_ADDR_OF_FATPTR(x862);
+   sk_canvas_draw_image_rect(x867, x868, x869, x870, x871);
+   return Val_unit;
+}
+value skia_wrapped_stub_103_sk_canvas_concat(value x874, value x873)
+{
+   sk_canvas_t* x875 = CTYPES_ADDR_OF_FATPTR(x874);
+   sk_matrix_t* x876 = CTYPES_ADDR_OF_FATPTR(x873);
+   sk_canvas_concat(x875, x876);
+   return Val_unit;
+}
+value skia_wrapped_stub_104_sk_canvas_set_matrix(value x879, value x878)
+{
+   sk_canvas_t* x880 = CTYPES_ADDR_OF_FATPTR(x879);
+   sk_matrix_t* x881 = CTYPES_ADDR_OF_FATPTR(x878);
+   sk_canvas_set_matrix(x880, x881);
+   return Val_unit;
+}
+value skia_wrapped_stub_105_sk_canvas_translate(value x885, value x884,
+                                                value x883)
+{
+   sk_canvas_t* x886 = CTYPES_ADDR_OF_FATPTR(x885);
+   double x887 = Double_val(x884);
+   double x890 = Double_val(x883);
+   sk_canvas_translate(x886, (float)x887, (float)x890);
+   return Val_unit;
+}
+value skia_wrapped_stub_106_sk_canvas_scale(value x896, value x895,
+                                            value x894)
+{
+   sk_canvas_t* x897 = CTYPES_ADDR_OF_FATPTR(x896);
+   double x898 = Double_val(x895);
+   double x901 = Double_val(x894);
+   sk_canvas_scale(x897, (float)x898, (float)x901);
+   return Val_unit;
+}
+value skia_wrapped_stub_107_sk_canvas_rotate_degrees(value x906, value x905)
+{
+   sk_canvas_t* x907 = CTYPES_ADDR_OF_FATPTR(x906);
+   double x908 = Double_val(x905);
+   sk_canvas_rotate_degrees(x907, (float)x908);
+   return Val_unit;
+}
+value skia_wrapped_stub_108_sk_canvas_skew(value x914, value x913,
+                                           value x912)
+{
+   sk_canvas_t* x915 = CTYPES_ADDR_OF_FATPTR(x914);
+   double x916 = Double_val(x913);
+   double x919 = Double_val(x912);
+   sk_canvas_skew(x915, (float)x916, (float)x919);
+   return Val_unit;
+}
+value skia_wrapped_stub_109_sk_canvas_reset_matrix(value x923)
+{
+   sk_canvas_t* x924 = CTYPES_ADDR_OF_FATPTR(x923);
+   sk_canvas_reset_matrix(x924);
+   return Val_unit;
+}
+value skia_wrapped_stub_110_sk_canvas_clip_rect_with_operation(value x929,
+                                                               value x928,
+                                                               value x927,
+                                                               value x926)
+{
+   sk_canvas_t* x930 = CTYPES_ADDR_OF_FATPTR(x929);
+   sk_rect_t* x931 = CTYPES_ADDR_OF_FATPTR(x928);
+   uint32_t x932 = Uint32_val(x927);
+   _Bool x935 = Bool_val(x926);
+   sk_canvas_clip_rect_with_operation(x930, x931, x932, x935);
+   return Val_unit;
+}
+value skia_wrapped_stub_111_sk_canvas_clip_path_with_operation(value x942,
+                                                               value x941,
+                                                               value x940,
+                                                               value x939)
+{
+   sk_canvas_t* x943 = CTYPES_ADDR_OF_FATPTR(x942);
+   sk_path_t* x944 = CTYPES_ADDR_OF_FATPTR(x941);
+   uint32_t x945 = Uint32_val(x940);
+   _Bool x948 = Bool_val(x939);
+   sk_canvas_clip_path_with_operation(x943, x944, x945, x948);
+   return Val_unit;
+}
+value skia_wrapped_stub_112_sk_canvas_clip_rrect_with_operation(value x955,
+                                                                value x954,
+                                                                value x953,
+                                                                value x952)
+{
+   sk_canvas_t* x956 = CTYPES_ADDR_OF_FATPTR(x955);
+   sk_rrect_t* x957 = CTYPES_ADDR_OF_FATPTR(x954);
+   uint32_t x958 = Uint32_val(x953);
+   _Bool x961 = Bool_val(x952);
+   sk_canvas_clip_rrect_with_operation(x956, x957, x958, x961);
+   return Val_unit;
+}
+value skia_wrapped_stub_113_sk_canvas_save(value x965)
+{
+   sk_canvas_t* x966 = CTYPES_ADDR_OF_FATPTR(x965);
+   int x967 = sk_canvas_save(x966);
+   return Val_long(x967);
+}
+value skia_wrapped_stub_114_sk_canvas_save_layer(value x970, value x969,
+                                                 value x968)
+{
+   sk_canvas_t* x971 = CTYPES_ADDR_OF_FATPTR(x970);
+   sk_rect_t* x972 = CTYPES_ADDR_OF_FATPTR(x969);
+   sk_paint_t* x973 = CTYPES_ADDR_OF_FATPTR(x968);
+   int x974 = sk_canvas_save_layer(x971, x972, x973);
+   return Val_long(x974);
+}
+value skia_wrapped_stub_115_sk_canvas_restore(value x975)
+{
+   sk_canvas_t* x976 = CTYPES_ADDR_OF_FATPTR(x975);
+   sk_canvas_restore(x976);
+   return Val_unit;
+}
+value skia_wrapped_stub_116_sk_canvas_flush(value x978)
+{
+   sk_canvas_t* x979 = CTYPES_ADDR_OF_FATPTR(x978);
+   sk_canvas_flush(x979);
+   return Val_unit;
+}
+value skia_wrapped_stub_117_sk_surfaceprops_new(value x982, value x981)
+{
+   uint32_t x983 = Uint32_val(x982);
+   uint32_t x986 = Uint32_val(x981);
+   sk_surfaceprops_t* x989 = sk_surfaceprops_new(x983, x986);
+   return CTYPES_FROM_PTR(x989);
+}
+value skia_wrapped_stub_118_sk_surface_new_raster(value x992, value x991,
+                                                  value x990)
+{
+   sk_imageinfo_t* x993 = CTYPES_ADDR_OF_FATPTR(x992);
+   size_t x994 = ctypes_size_t_val(x991);
+   sk_surfaceprops_t* x997 = CTYPES_ADDR_OF_FATPTR(x990);
+   sk_surface_t* x998 = sk_surface_new_raster(x993, x994, x997);
+   return CTYPES_FROM_PTR(x998);
+}
+value skia_wrapped_stub_119_sk_surface_new_render_target(value x1005,
+                                                         value x1004,
+                                                         value x1003,
+                                                         value x1002,
+                                                         value x1001,
+                                                         value x1000,
+                                                         value x999)
+{
+   gr_context_t* x1006 = CTYPES_ADDR_OF_FATPTR(x1005);
+   _Bool x1007 = Bool_val(x1004);
+   sk_imageinfo_t* x1010 = CTYPES_ADDR_OF_FATPTR(x1003);
+   int x1011 = Long_val(x1002);
+   uint32_t x1014 = Uint32_val(x1001);
+   sk_surfaceprops_t* x1017 = CTYPES_ADDR_OF_FATPTR(x1000);
+   _Bool x1018 = Bool_val(x999);
+   sk_surface_t* x1021 =
+   sk_surface_new_render_target(x1006, x1007, x1010, x1011, x1014, x1017,
+                                x1018);
+   return CTYPES_FROM_PTR(x1021);
+}
+value skia_wrapped_stub_119_sk_surface_new_render_target_byte7(value* argv,
+                                                               int argc)
+{
+   value x1022 = argv[6];
+   value x1023 = argv[5];
+   value x1024 = argv[4];
+   value x1025 = argv[3];
+   value x1026 = argv[2];
+   value x1027 = argv[1];
+   value x1028 = argv[0];
+   return
+     skia_wrapped_stub_119_sk_surface_new_render_target(x1028, x1027, 
+                                                        x1026, x1025, 
+                                                        x1024, x1023, 
+                                                        x1022);
+}
+value skia_wrapped_stub_120_sk_surface_new_backend_render_target(value x1034,
+                                                                 value x1033,
+                                                                 value x1032,
+                                                                 value x1031,
+                                                                 value x1030,
+                                                                 value x1029)
+{
+   gr_context_t* x1035 = CTYPES_ADDR_OF_FATPTR(x1034);
+   gr_backendrendertarget_t* x1036 = CTYPES_ADDR_OF_FATPTR(x1033);
+   uint32_t x1037 = Uint32_val(x1032);
+   uint32_t x1040 = Uint32_val(x1031);
+   sk_colorspace_t* x1043 = CTYPES_ADDR_OF_FATPTR(x1030);
+   sk_surfaceprops_t* x1044 = CTYPES_ADDR_OF_FATPTR(x1029);
+   sk_surface_t* x1045 =
+   sk_surface_new_backend_render_target(x1035, x1036, x1037, x1040, x1043,
+                                        x1044);
+   return CTYPES_FROM_PTR(x1045);
+}
+value skia_wrapped_stub_120_sk_surface_new_backend_render_target_byte6
+     (value* argv, int argc)
+{
+   value x1046 = argv[5];
+   value x1047 = argv[4];
+   value x1048 = argv[3];
+   value x1049 = argv[2];
+   value x1050 = argv[1];
+   value x1051 = argv[0];
+   return
+     skia_wrapped_stub_120_sk_surface_new_backend_render_target(x1051, 
+                                                                x1050, 
+                                                                x1049, 
+                                                                x1048, 
+                                                                x1047, 
+                                                                x1046);
+}
+value skia_wrapped_stub_121_sk_surface_unref(value x1052)
+{
+   sk_surface_t* x1053 = CTYPES_ADDR_OF_FATPTR(x1052);
+   sk_surface_unref(x1053);
+   return Val_unit;
+}
+value skia_wrapped_stub_122_sk_surface_get_canvas(value x1055)
+{
+   sk_surface_t* x1056 = CTYPES_ADDR_OF_FATPTR(x1055);
+   sk_canvas_t* x1057 = sk_surface_get_canvas(x1056);
+   return CTYPES_FROM_PTR(x1057);
+}
+value skia_wrapped_stub_123_sk_surface_new_image_snapshot(value x1058)
+{
+   sk_surface_t* x1059 = CTYPES_ADDR_OF_FATPTR(x1058);
+   sk_image_t* x1060 = sk_surface_new_image_snapshot(x1059);
+   return CTYPES_FROM_PTR(x1060);
+}
+value skia_wrapped_stub_124_sk_surface_get_width(value x1061)
+{
+   sk_surface_t* x1062 = CTYPES_ADDR_OF_FATPTR(x1061);
+   int x1063 = sk_surface_get_width(x1062);
+   return Val_long(x1063);
+}
+value skia_wrapped_stub_125_sk_surface_get_height(value x1064)
+{
+   sk_surface_t* x1065 = CTYPES_ADDR_OF_FATPTR(x1064);
+   int x1066 = sk_surface_get_height(x1065);
+   return Val_long(x1066);
+}
+value skia_wrapped_stub_126_sk_surface_get_props(value x1067)
+{
+   sk_surface_t* x1068 = CTYPES_ADDR_OF_FATPTR(x1067);
+   sk_surfaceprops_t* x1069 = sk_surface_get_props(x1068);
+   return CTYPES_FROM_PTR(x1069);
+}
diff --git a/src/wrapped/lib/skia_generated_stubs.ml b/src/wrapped/lib/skia_generated_stubs.ml
new file mode 100644
index 0000000..0017bf8
--- /dev/null
+++ b/src/wrapped/lib/skia_generated_stubs.ml
@@ -0,0 +1,1429 @@
+module CI = Cstubs_internals
+
+external skia_wrapped_stub_1_sk_fontstyle_new
+  : int -> int -> Unsigned.uint32 -> CI.voidp
+  = "skia_wrapped_stub_1_sk_fontstyle_new" 
+
+external skia_wrapped_stub_2_sk_typeface_create_from_name_with_font_style
+  : _ CI.fatptr -> _ CI.fatptr -> CI.voidp
+  = "skia_wrapped_stub_2_sk_typeface_create_from_name_with_font_style" 
+
+external skia_wrapped_stub_3_sk_typeface_create_from_file
+  : _ CI.fatptr -> int -> CI.voidp
+  = "skia_wrapped_stub_3_sk_typeface_create_from_file" 
+
+external skia_wrapped_stub_4_sk_imagefilter_unref : _ CI.fatptr -> unit
+  = "skia_wrapped_stub_4_sk_imagefilter_unref" 
+
+external skia_wrapped_stub_5_sk_imagefilter_new_drop_shadow
+  : float -> float -> float -> float -> Unsigned.uint32 -> Unsigned.uint32 ->
+    _ CI.fatptr -> _ CI.fatptr -> CI.voidp
+  =
+  "skia_wrapped_stub_5_sk_imagefilter_new_drop_shadow_byte8" "skia_wrapped_stub_5_sk_imagefilter_new_drop_shadow"
+  
+
+external skia_wrapped_stub_6_sk_paint_new : unit -> CI.voidp
+  = "skia_wrapped_stub_6_sk_paint_new" 
+
+external skia_wrapped_stub_7_sk_paint_delete : _ CI.fatptr -> unit
+  = "skia_wrapped_stub_7_sk_paint_delete" 
+
+external skia_wrapped_stub_8_sk_paint_set_color
+  : _ CI.fatptr -> Unsigned.uint32 -> unit
+  = "skia_wrapped_stub_8_sk_paint_set_color" 
+
+external skia_wrapped_stub_9_sk_paint_set_antialias
+  : _ CI.fatptr -> bool -> unit
+  = "skia_wrapped_stub_9_sk_paint_set_antialias" 
+
+external skia_wrapped_stub_10_sk_paint_set_style
+  : _ CI.fatptr -> Unsigned.uint32 -> unit
+  = "skia_wrapped_stub_10_sk_paint_set_style" 
+
+external skia_wrapped_stub_11_sk_paint_set_stroke_width
+  : _ CI.fatptr -> float -> unit
+  = "skia_wrapped_stub_11_sk_paint_set_stroke_width" 
+
+external skia_wrapped_stub_12_sk_paint_set_typeface
+  : _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_12_sk_paint_set_typeface" 
+
+external skia_wrapped_stub_13_sk_paint_set_lcd_render_text
+  : _ CI.fatptr -> bool -> unit
+  = "skia_wrapped_stub_13_sk_paint_set_lcd_render_text" 
+
+external skia_wrapped_stub_14_sk_paint_set_subpixel_text
+  : _ CI.fatptr -> bool -> unit
+  = "skia_wrapped_stub_14_sk_paint_set_subpixel_text" 
+
+external skia_wrapped_stub_15_sk_paint_set_textsize
+  : _ CI.fatptr -> float -> unit
+  = "skia_wrapped_stub_15_sk_paint_set_textsize" 
+
+external skia_wrapped_stub_16_sk_paint_get_fontmetrics
+  : _ CI.fatptr -> _ CI.fatptr -> float -> float
+  = "skia_wrapped_stub_16_sk_paint_get_fontmetrics" 
+
+external skia_wrapped_stub_17_sk_paint_is_autohinted : _ CI.fatptr -> bool
+  = "skia_wrapped_stub_17_sk_paint_is_autohinted" 
+
+external skia_wrapped_stub_18_sk_paint_set_autohinted
+  : _ CI.fatptr -> bool -> unit
+  = "skia_wrapped_stub_18_sk_paint_set_autohinted" 
+
+external skia_wrapped_stub_19_sk_paint_is_autohinted : _ CI.fatptr -> bool
+  = "skia_wrapped_stub_19_sk_paint_is_autohinted" 
+
+external skia_wrapped_stub_20_sk_paint_get_hinting
+  : _ CI.fatptr -> Unsigned.uint32
+  = "skia_wrapped_stub_20_sk_paint_get_hinting" 
+
+external skia_wrapped_stub_21_sk_paint_set_hinting
+  : _ CI.fatptr -> Unsigned.uint32 -> unit
+  = "skia_wrapped_stub_21_sk_paint_set_hinting" 
+
+external skia_wrapped_stub_22_sk_paint_measure_text
+  : _ CI.fatptr -> _ CI.fatptr -> int -> _ CI.fatptr -> float
+  = "skia_wrapped_stub_22_sk_paint_measure_text" 
+
+external skia_wrapped_stub_23_sk_paint_set_imagefilter
+  : _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_23_sk_paint_set_imagefilter" 
+
+external skia_wrapped_stub_24_sk_paint_get_text_encoding
+  : _ CI.fatptr -> Unsigned.uint32
+  = "skia_wrapped_stub_24_sk_paint_get_text_encoding" 
+
+external skia_wrapped_stub_25_sk_paint_set_text_encoding
+  : _ CI.fatptr -> Unsigned.uint32 -> unit
+  = "skia_wrapped_stub_25_sk_paint_set_text_encoding" 
+
+external skia_wrapped_stub_26_sk_matrix_try_invert
+  : _ CI.fatptr -> _ CI.fatptr -> bool
+  = "skia_wrapped_stub_26_sk_matrix_try_invert" 
+
+external skia_wrapped_stub_27_sk_matrix_concat
+  : _ CI.fatptr -> _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_27_sk_matrix_concat" 
+
+external skia_wrapped_stub_28_sk_matrix_pre_concat
+  : _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_28_sk_matrix_pre_concat" 
+
+external skia_wrapped_stub_29_sk_matrix_post_concat
+  : _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_29_sk_matrix_post_concat" 
+
+external skia_wrapped_stub_30_sk_matrix_map_rect
+  : _ CI.fatptr -> _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_30_sk_matrix_map_rect" 
+
+external skia_wrapped_stub_31_sk_matrix_map_points
+  : _ CI.fatptr -> _ CI.fatptr -> _ CI.fatptr -> int -> unit
+  = "skia_wrapped_stub_31_sk_matrix_map_points" 
+
+external skia_wrapped_stub_32_sk_matrix_map_vectors
+  : _ CI.fatptr -> _ CI.fatptr -> _ CI.fatptr -> int -> unit
+  = "skia_wrapped_stub_32_sk_matrix_map_vectors" 
+
+external skia_wrapped_stub_33_sk_matrix_map_xy
+  : _ CI.fatptr -> float -> float -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_33_sk_matrix_map_xy" 
+
+external skia_wrapped_stub_34_sk_matrix_map_vector
+  : _ CI.fatptr -> float -> float -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_34_sk_matrix_map_vector" 
+
+external skia_wrapped_stub_35_sk_matrix_map_radius
+  : _ CI.fatptr -> float -> float
+  = "skia_wrapped_stub_35_sk_matrix_map_radius" 
+
+external skia_wrapped_stub_36_sk_matrix44_new : unit -> CI.voidp
+  = "skia_wrapped_stub_36_sk_matrix44_new" 
+
+external skia_wrapped_stub_37_sk_matrix44_new_identity : unit -> CI.voidp
+  = "skia_wrapped_stub_37_sk_matrix44_new_identity" 
+
+external skia_wrapped_stub_38_sk_matrix44_destroy : _ CI.fatptr -> unit
+  = "skia_wrapped_stub_38_sk_matrix44_destroy" 
+
+external skia_wrapped_stub_39_sk_matrix44_set_rotate_about_degrees
+  : _ CI.fatptr -> float -> float -> float -> float -> unit
+  = "skia_wrapped_stub_39_sk_matrix44_set_rotate_about_degrees" 
+
+external skia_wrapped_stub_40_sk_matrix44_set_rotate_about_radians
+  : _ CI.fatptr -> float -> float -> float -> float -> unit
+  = "skia_wrapped_stub_40_sk_matrix44_set_rotate_about_radians" 
+
+external skia_wrapped_stub_41_sk_matrix44_set_translate
+  : _ CI.fatptr -> float -> float -> float -> unit
+  = "skia_wrapped_stub_41_sk_matrix44_set_translate" 
+
+external skia_wrapped_stub_42_sk_matrix44_pre_translate
+  : _ CI.fatptr -> float -> float -> float -> unit
+  = "skia_wrapped_stub_42_sk_matrix44_pre_translate" 
+
+external skia_wrapped_stub_43_sk_matrix44_post_translate
+  : _ CI.fatptr -> float -> float -> float -> unit
+  = "skia_wrapped_stub_43_sk_matrix44_post_translate" 
+
+external skia_wrapped_stub_44_sk_matrix44_set_scale
+  : _ CI.fatptr -> float -> float -> float -> unit
+  = "skia_wrapped_stub_44_sk_matrix44_set_scale" 
+
+external skia_wrapped_stub_45_sk_matrix44_pre_scale
+  : _ CI.fatptr -> float -> float -> float -> unit
+  = "skia_wrapped_stub_45_sk_matrix44_pre_scale" 
+
+external skia_wrapped_stub_46_sk_matrix44_post_scale
+  : _ CI.fatptr -> float -> float -> float -> unit
+  = "skia_wrapped_stub_46_sk_matrix44_post_scale" 
+
+external skia_wrapped_stub_47_sk_matrix44_set_concat
+  : _ CI.fatptr -> _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_47_sk_matrix44_set_concat" 
+
+external skia_wrapped_stub_48_sk_matrix44_pre_concat
+  : _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_48_sk_matrix44_pre_concat" 
+
+external skia_wrapped_stub_49_sk_matrix44_post_concat
+  : _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_49_sk_matrix44_post_concat" 
+
+external skia_wrapped_stub_50_sk_matrix44_get
+  : _ CI.fatptr -> int -> int -> float
+  = "skia_wrapped_stub_50_sk_matrix44_get" 
+
+external skia_wrapped_stub_51_sk_matrix44_set
+  : _ CI.fatptr -> int -> int -> float -> unit
+  = "skia_wrapped_stub_51_sk_matrix44_set" 
+
+external skia_wrapped_stub_52_sk_matrix44_to_matrix
+  : _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_52_sk_matrix44_to_matrix" 
+
+external skia_wrapped_stub_53_sk_rrect_new : unit -> CI.voidp
+  = "skia_wrapped_stub_53_sk_rrect_new" 
+
+external skia_wrapped_stub_54_sk_rrect_new_copy : _ CI.fatptr -> CI.voidp
+  = "skia_wrapped_stub_54_sk_rrect_new_copy" 
+
+external skia_wrapped_stub_55_sk_rrect_delete : _ CI.fatptr -> unit
+  = "skia_wrapped_stub_55_sk_rrect_delete" 
+
+external skia_wrapped_stub_56_sk_rrect_get_type
+  : _ CI.fatptr -> Unsigned.uint32 = "skia_wrapped_stub_56_sk_rrect_get_type" 
+
+external skia_wrapped_stub_57_sk_rrect_get_rect
+  : _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_57_sk_rrect_get_rect" 
+
+external skia_wrapped_stub_58_sk_rrect_get_radii
+  : _ CI.fatptr -> Unsigned.uint32 -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_58_sk_rrect_get_radii" 
+
+external skia_wrapped_stub_59_sk_rrect_get_width : _ CI.fatptr -> float
+  = "skia_wrapped_stub_59_sk_rrect_get_width" 
+
+external skia_wrapped_stub_60_sk_rrect_get_height : _ CI.fatptr -> float
+  = "skia_wrapped_stub_60_sk_rrect_get_height" 
+
+external skia_wrapped_stub_61_sk_rrect_set_empty : _ CI.fatptr -> unit
+  = "skia_wrapped_stub_61_sk_rrect_set_empty" 
+
+external skia_wrapped_stub_62_sk_rrect_set_rect
+  : _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_62_sk_rrect_set_rect" 
+
+external skia_wrapped_stub_63_sk_rrect_set_oval
+  : _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_63_sk_rrect_set_oval" 
+
+external skia_wrapped_stub_64_sk_rrect_set_rect_xy
+  : _ CI.fatptr -> _ CI.fatptr -> float -> float -> unit
+  = "skia_wrapped_stub_64_sk_rrect_set_rect_xy" 
+
+external skia_wrapped_stub_65_sk_rrect_set_nine_patch
+  : _ CI.fatptr -> _ CI.fatptr -> float -> float -> float -> float -> unit
+  =
+  "skia_wrapped_stub_65_sk_rrect_set_nine_patch_byte6" "skia_wrapped_stub_65_sk_rrect_set_nine_patch"
+  
+
+external skia_wrapped_stub_66_sk_rrect_set_rect_radii
+  : _ CI.fatptr -> _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_66_sk_rrect_set_rect_radii" 
+
+external skia_wrapped_stub_67_sk_rrect_inset
+  : _ CI.fatptr -> float -> float -> unit
+  = "skia_wrapped_stub_67_sk_rrect_inset" 
+
+external skia_wrapped_stub_68_sk_rrect_outset
+  : _ CI.fatptr -> float -> float -> unit
+  = "skia_wrapped_stub_68_sk_rrect_outset" 
+
+external skia_wrapped_stub_69_sk_rrect_offset
+  : _ CI.fatptr -> float -> float -> unit
+  = "skia_wrapped_stub_69_sk_rrect_offset" 
+
+external skia_wrapped_stub_70_sk_rrect_contains
+  : _ CI.fatptr -> _ CI.fatptr -> bool
+  = "skia_wrapped_stub_70_sk_rrect_contains" 
+
+external skia_wrapped_stub_71_sk_rrect_is_valid : _ CI.fatptr -> bool
+  = "skia_wrapped_stub_71_sk_rrect_is_valid" 
+
+external skia_wrapped_stub_72_sk_rrect_transform
+  : _ CI.fatptr -> _ CI.fatptr -> _ CI.fatptr -> bool
+  = "skia_wrapped_stub_72_sk_rrect_transform" 
+
+external skia_wrapped_stub_73_sk_path_new : unit -> CI.voidp
+  = "skia_wrapped_stub_73_sk_path_new" 
+
+external skia_wrapped_stub_74_sk_path_delete : _ CI.fatptr -> unit
+  = "skia_wrapped_stub_74_sk_path_delete" 
+
+external skia_wrapped_stub_75_sk_path_add_rounded_rect
+  : _ CI.fatptr -> _ CI.fatptr -> float -> float -> Unsigned.uint32 -> unit
+  = "skia_wrapped_stub_75_sk_path_add_rounded_rect" 
+
+external skia_wrapped_stub_76_sk_path_add_circle
+  : _ CI.fatptr -> float -> float -> float -> Unsigned.uint32 -> unit
+  = "skia_wrapped_stub_76_sk_path_add_circle" 
+
+external skia_wrapped_stub_77_sk_path_move_to
+  : _ CI.fatptr -> float -> float -> unit
+  = "skia_wrapped_stub_77_sk_path_move_to" 
+
+external skia_wrapped_stub_78_sk_path_line_to
+  : _ CI.fatptr -> float -> float -> unit
+  = "skia_wrapped_stub_78_sk_path_line_to" 
+
+external skia_wrapped_stub_79_sk_path_cubic_to
+  : _ CI.fatptr -> float -> float -> float -> float -> float -> float -> unit
+  =
+  "skia_wrapped_stub_79_sk_path_cubic_to_byte7" "skia_wrapped_stub_79_sk_path_cubic_to"
+  
+
+external skia_wrapped_stub_80_sk_path_close : _ CI.fatptr -> unit
+  = "skia_wrapped_stub_80_sk_path_close" 
+
+external skia_wrapped_stub_81_sk_data_new_from_file : _ CI.fatptr -> CI.voidp
+  = "skia_wrapped_stub_81_sk_data_new_from_file" 
+
+external skia_wrapped_stub_82_sk_data_unref : _ CI.fatptr -> unit
+  = "skia_wrapped_stub_82_sk_data_unref" 
+
+external skia_wrapped_stub_83_sk_data_get_data : _ CI.fatptr -> CI.voidp
+  = "skia_wrapped_stub_83_sk_data_get_data" 
+
+external skia_wrapped_stub_84_sk_data_get_size
+  : _ CI.fatptr -> Unsigned.size_t = "skia_wrapped_stub_84_sk_data_get_size" 
+
+external skia_wrapped_stub_85_sk_image_new_from_encoded
+  : _ CI.fatptr -> _ CI.fatptr -> CI.voidp
+  = "skia_wrapped_stub_85_sk_image_new_from_encoded" 
+
+external skia_wrapped_stub_86_sk_image_unref : _ CI.fatptr -> unit
+  = "skia_wrapped_stub_86_sk_image_unref" 
+
+external skia_wrapped_stub_87_sk_image_encode : _ CI.fatptr -> CI.voidp
+  = "skia_wrapped_stub_87_sk_image_encode" 
+
+external skia_wrapped_stub_88_gr_glinterface_create_native_interface
+  : unit -> CI.voidp
+  = "skia_wrapped_stub_88_gr_glinterface_create_native_interface" 
+
+external skia_wrapped_stub_89_reason_skia_make_sdl2_interface
+  : unit -> CI.voidp = "skia_wrapped_stub_89_reason_skia_make_sdl2_interface" 
+
+external skia_wrapped_stub_90_gr_context_make_gl : _ CI.fatptr -> CI.voidp
+  = "skia_wrapped_stub_90_gr_context_make_gl" 
+
+external skia_wrapped_stub_91_gr_backendrendertarget_new_gl
+  : int -> int -> int -> int -> _ CI.fatptr -> CI.voidp
+  = "skia_wrapped_stub_91_gr_backendrendertarget_new_gl" 
+
+external skia_wrapped_stub_92_sk_canvas_clear
+  : _ CI.fatptr -> Unsigned.uint32 -> unit
+  = "skia_wrapped_stub_92_sk_canvas_clear" 
+
+external skia_wrapped_stub_93_sk_canvas_draw_paint
+  : _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_93_sk_canvas_draw_paint" 
+
+external skia_wrapped_stub_94_sk_canvas_draw_rect
+  : _ CI.fatptr -> _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_94_sk_canvas_draw_rect" 
+
+external skia_wrapped_stub_95_reason_skia_stub_sk_canvas_draw_rect_ltwh
+  : _ CI.fatptr -> float -> float -> float -> float -> _ CI.fatptr -> unit
+  =
+  "skia_wrapped_stub_95_reason_skia_stub_sk_canvas_draw_rect_ltwh_byte6" 
+  "skia_wrapped_stub_95_reason_skia_stub_sk_canvas_draw_rect_ltwh" 
+
+external skia_wrapped_stub_96_sk_canvas_draw_oval
+  : _ CI.fatptr -> _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_96_sk_canvas_draw_oval" 
+
+external skia_wrapped_stub_97_sk_canvas_draw_circle
+  : _ CI.fatptr -> float -> float -> float -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_97_sk_canvas_draw_circle" 
+
+external skia_wrapped_stub_98_sk_canvas_draw_rrect
+  : _ CI.fatptr -> _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_98_sk_canvas_draw_rrect" 
+
+external skia_wrapped_stub_99_sk_canvas_draw_path
+  : _ CI.fatptr -> _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_99_sk_canvas_draw_path" 
+
+external skia_wrapped_stub_100_sk_canvas_draw_text
+  : _ CI.fatptr -> _ CI.fatptr -> int -> float -> float -> _ CI.fatptr ->
+    unit
+  =
+  "skia_wrapped_stub_100_sk_canvas_draw_text_byte6" "skia_wrapped_stub_100_sk_canvas_draw_text"
+  
+
+external skia_wrapped_stub_101_sk_canvas_draw_image
+  : _ CI.fatptr -> _ CI.fatptr -> float -> float -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_101_sk_canvas_draw_image" 
+
+external skia_wrapped_stub_102_sk_canvas_draw_image_rect
+  : _ CI.fatptr -> _ CI.fatptr -> _ CI.fatptr -> _ CI.fatptr ->
+    _ CI.fatptr -> unit = "skia_wrapped_stub_102_sk_canvas_draw_image_rect" 
+
+external skia_wrapped_stub_103_sk_canvas_concat
+  : _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_103_sk_canvas_concat" 
+
+external skia_wrapped_stub_104_sk_canvas_set_matrix
+  : _ CI.fatptr -> _ CI.fatptr -> unit
+  = "skia_wrapped_stub_104_sk_canvas_set_matrix" 
+
+external skia_wrapped_stub_105_sk_canvas_translate
+  : _ CI.fatptr -> float -> float -> unit
+  = "skia_wrapped_stub_105_sk_canvas_translate" 
+
+external skia_wrapped_stub_106_sk_canvas_scale
+  : _ CI.fatptr -> float -> float -> unit
+  = "skia_wrapped_stub_106_sk_canvas_scale" 
+
+external skia_wrapped_stub_107_sk_canvas_rotate_degrees
+  : _ CI.fatptr -> float -> unit
+  = "skia_wrapped_stub_107_sk_canvas_rotate_degrees" 
+
+external skia_wrapped_stub_108_sk_canvas_skew
+  : _ CI.fatptr -> float -> float -> unit
+  = "skia_wrapped_stub_108_sk_canvas_skew" 
+
+external skia_wrapped_stub_109_sk_canvas_reset_matrix : _ CI.fatptr -> unit
+  = "skia_wrapped_stub_109_sk_canvas_reset_matrix" 
+
+external skia_wrapped_stub_110_sk_canvas_clip_rect_with_operation
+  : _ CI.fatptr -> _ CI.fatptr -> Unsigned.uint32 -> bool -> unit
+  = "skia_wrapped_stub_110_sk_canvas_clip_rect_with_operation" 
+
+external skia_wrapped_stub_111_sk_canvas_clip_path_with_operation
+  : _ CI.fatptr -> _ CI.fatptr -> Unsigned.uint32 -> bool -> unit
+  = "skia_wrapped_stub_111_sk_canvas_clip_path_with_operation" 
+
+external skia_wrapped_stub_112_sk_canvas_clip_rrect_with_operation
+  : _ CI.fatptr -> _ CI.fatptr -> Unsigned.uint32 -> bool -> unit
+  = "skia_wrapped_stub_112_sk_canvas_clip_rrect_with_operation" 
+
+external skia_wrapped_stub_113_sk_canvas_save : _ CI.fatptr -> int
+  = "skia_wrapped_stub_113_sk_canvas_save" 
+
+external skia_wrapped_stub_114_sk_canvas_save_layer
+  : _ CI.fatptr -> _ CI.fatptr -> _ CI.fatptr -> int
+  = "skia_wrapped_stub_114_sk_canvas_save_layer" 
+
+external skia_wrapped_stub_115_sk_canvas_restore : _ CI.fatptr -> unit
+  = "skia_wrapped_stub_115_sk_canvas_restore" 
+
+external skia_wrapped_stub_116_sk_canvas_flush : _ CI.fatptr -> unit
+  = "skia_wrapped_stub_116_sk_canvas_flush" 
+
+external skia_wrapped_stub_117_sk_surfaceprops_new
+  : Unsigned.uint32 -> Unsigned.uint32 -> CI.voidp
+  = "skia_wrapped_stub_117_sk_surfaceprops_new" 
+
+external skia_wrapped_stub_118_sk_surface_new_raster
+  : _ CI.fatptr -> Unsigned.size_t -> _ CI.fatptr -> CI.voidp
+  = "skia_wrapped_stub_118_sk_surface_new_raster" 
+
+external skia_wrapped_stub_119_sk_surface_new_render_target
+  : _ CI.fatptr -> bool -> _ CI.fatptr -> int -> Unsigned.uint32 ->
+    _ CI.fatptr -> bool -> CI.voidp
+  =
+  "skia_wrapped_stub_119_sk_surface_new_render_target_byte7" "skia_wrapped_stub_119_sk_surface_new_render_target"
+  
+
+external skia_wrapped_stub_120_sk_surface_new_backend_render_target
+  : _ CI.fatptr -> _ CI.fatptr -> Unsigned.uint32 -> Unsigned.uint32 ->
+    _ CI.fatptr -> _ CI.fatptr -> CI.voidp
+  =
+  "skia_wrapped_stub_120_sk_surface_new_backend_render_target_byte6" 
+  "skia_wrapped_stub_120_sk_surface_new_backend_render_target" 
+
+external skia_wrapped_stub_121_sk_surface_unref : _ CI.fatptr -> unit
+  = "skia_wrapped_stub_121_sk_surface_unref" 
+
+external skia_wrapped_stub_122_sk_surface_get_canvas
+  : _ CI.fatptr -> CI.voidp = "skia_wrapped_stub_122_sk_surface_get_canvas" 
+
+external skia_wrapped_stub_123_sk_surface_new_image_snapshot
+  : _ CI.fatptr -> CI.voidp
+  = "skia_wrapped_stub_123_sk_surface_new_image_snapshot" 
+
+external skia_wrapped_stub_124_sk_surface_get_width : _ CI.fatptr -> int
+  = "skia_wrapped_stub_124_sk_surface_get_width" 
+
+external skia_wrapped_stub_125_sk_surface_get_height : _ CI.fatptr -> int
+  = "skia_wrapped_stub_125_sk_surface_get_height" 
+
+external skia_wrapped_stub_126_sk_surface_get_props : _ CI.fatptr -> CI.voidp
+  = "skia_wrapped_stub_126_sk_surface_get_props" 
+
+type 'a result = 'a
+type 'a return = 'a
+type 'a fn =
+ | Returns  : 'a CI.typ   -> 'a return fn
+ | Function : 'a CI.typ * 'b fn  -> ('a -> 'b) fn
+let map_result f x = f x
+let returning t = Returns t
+let (@->) f p = Function (f, p)
+let foreign : type a b. string -> (a -> b) fn -> (a -> b) =
+  fun name t -> match t, name with
+| Function (CI.Pointer _, Returns (CI.Pointer x2)), "sk_surface_get_props" ->
+  (fun x1 ->
+    CI.make_ptr x2 (skia_wrapped_stub_126_sk_surface_get_props (CI.cptr x1)))
+| Function (CI.Pointer _, Returns (CI.Primitive CI.Int)),
+  "sk_surface_get_height" ->
+  (fun x3 -> skia_wrapped_stub_125_sk_surface_get_height (CI.cptr x3))
+| Function (CI.Pointer _, Returns (CI.Primitive CI.Int)),
+  "sk_surface_get_width" ->
+  (fun x4 -> skia_wrapped_stub_124_sk_surface_get_width (CI.cptr x4))
+| Function (CI.Pointer _, Returns (CI.Pointer x6)),
+  "sk_surface_new_image_snapshot" ->
+  (fun x5 ->
+    CI.make_ptr x6
+      (skia_wrapped_stub_123_sk_surface_new_image_snapshot (CI.cptr x5)))
+| Function (CI.Pointer _, Returns (CI.Pointer x8)), "sk_surface_get_canvas" ->
+  (fun x7 ->
+    CI.make_ptr x8 (skia_wrapped_stub_122_sk_surface_get_canvas (CI.cptr x7)))
+| Function (CI.Pointer _, Returns CI.Void), "sk_surface_unref" ->
+  (fun x9 -> skia_wrapped_stub_121_sk_surface_unref (CI.cptr x9))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Pointer _,
+        Function
+          (CI.View {CI.ty = CI.Primitive CI.Uint32_t; write = x13; _},
+           Function
+             (CI.View {CI.ty = CI.Primitive CI.Uint32_t; write = x16; _},
+              Function
+                (CI.View {CI.ty = CI.Pointer _; write = x19; _},
+                 Function
+                   (CI.View {CI.ty = CI.Pointer _; write = x22; _},
+                    Returns (CI.View {CI.ty = CI.Pointer x24; read = x25; _}))))))),
+  "sk_surface_new_backend_render_target" ->
+  (fun x10 x11 x12 x15 x18 x21 ->
+    let x14 = x13 x12 in
+    let x17 = x16 x15 in
+    let x20 = CI.cptr (x19 x18) in
+    let x23 = CI.cptr (x22 x21) in
+    x25
+    (CI.make_ptr x24
+       (skia_wrapped_stub_120_sk_surface_new_backend_render_target
+        (CI.cptr x10) (CI.cptr x11) x14 x17 x20 x23)))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Bool,
+        Function
+          (CI.Pointer _,
+           Function
+             (CI.Primitive CI.Int,
+              Function
+                (CI.View {CI.ty = CI.Primitive CI.Uint32_t; write = x31; _},
+                 Function
+                   (CI.View {CI.ty = CI.Pointer _; write = x34; _},
+                    Function
+                      (CI.Primitive CI.Bool,
+                       Returns
+                         (CI.View {CI.ty = CI.Pointer x37; read = x38; _})))))))),
+  "sk_surface_new_render_target" ->
+  (fun x26 x27 x28 x29 x30 x33 x36 ->
+    let x32 = x31 x30 in
+    let x35 = CI.cptr (x34 x33) in
+    x38
+    (CI.make_ptr x37
+       (skia_wrapped_stub_119_sk_surface_new_render_target (CI.cptr x26) x27
+        (CI.cptr x28) x29 x32 x35 x36)))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Size_t,
+        Function
+          (CI.View {CI.ty = CI.Pointer _; write = x42; _},
+           Returns (CI.Pointer x44)))),
+  "sk_surface_new_raster" ->
+  (fun x39 x40 x41 ->
+    let x43 = CI.cptr (x42 x41) in
+    CI.make_ptr x44
+      (skia_wrapped_stub_118_sk_surface_new_raster (CI.cptr x39) x40 x43))
+| Function
+    (CI.Primitive CI.Uint32_t,
+     Function
+       (CI.View {CI.ty = CI.Primitive CI.Uint32_t; write = x47; _},
+        Returns (CI.Pointer x49))),
+  "sk_surfaceprops_new" ->
+  (fun x45 x46 ->
+    let x48 = x47 x46 in
+    CI.make_ptr x49 (skia_wrapped_stub_117_sk_surfaceprops_new x45 x48))
+| Function (CI.Pointer _, Returns CI.Void), "sk_canvas_flush" ->
+  (fun x50 -> skia_wrapped_stub_116_sk_canvas_flush (CI.cptr x50))
+| Function (CI.Pointer _, Returns CI.Void), "sk_canvas_restore" ->
+  (fun x51 -> skia_wrapped_stub_115_sk_canvas_restore (CI.cptr x51))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.View {CI.ty = CI.Pointer _; write = x54; _},
+        Function
+          (CI.View {CI.ty = CI.Pointer _; write = x57; _},
+           Returns (CI.Primitive CI.Int)))),
+  "sk_canvas_save_layer" ->
+  (fun x52 x53 x56 ->
+    let x55 = CI.cptr (x54 x53) in
+    let x58 = CI.cptr (x57 x56) in
+    skia_wrapped_stub_114_sk_canvas_save_layer (CI.cptr x52) x55 x58)
+| Function (CI.Pointer _, Returns (CI.Primitive CI.Int)), "sk_canvas_save" ->
+  (fun x59 -> skia_wrapped_stub_113_sk_canvas_save (CI.cptr x59))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Pointer _,
+        Function
+          (CI.View {CI.ty = CI.Primitive CI.Uint32_t; write = x63; _},
+           Function (CI.Primitive CI.Bool, Returns CI.Void)))),
+  "sk_canvas_clip_rrect_with_operation" ->
+  (fun x60 x61 x62 x65 ->
+    let x64 = x63 x62 in
+    skia_wrapped_stub_112_sk_canvas_clip_rrect_with_operation (CI.cptr x60)
+    (CI.cptr x61) x64 x65)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Pointer _,
+        Function
+          (CI.View {CI.ty = CI.Primitive CI.Uint32_t; write = x69; _},
+           Function (CI.Primitive CI.Bool, Returns CI.Void)))),
+  "sk_canvas_clip_path_with_operation" ->
+  (fun x66 x67 x68 x71 ->
+    let x70 = x69 x68 in
+    skia_wrapped_stub_111_sk_canvas_clip_path_with_operation (CI.cptr x66)
+    (CI.cptr x67) x70 x71)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Pointer _,
+        Function
+          (CI.View {CI.ty = CI.Primitive CI.Uint32_t; write = x75; _},
+           Function (CI.Primitive CI.Bool, Returns CI.Void)))),
+  "sk_canvas_clip_rect_with_operation" ->
+  (fun x72 x73 x74 x77 ->
+    let x76 = x75 x74 in
+    skia_wrapped_stub_110_sk_canvas_clip_rect_with_operation (CI.cptr x72)
+    (CI.cptr x73) x76 x77)
+| Function (CI.Pointer _, Returns CI.Void), "sk_canvas_reset_matrix" ->
+  (fun x78 -> skia_wrapped_stub_109_sk_canvas_reset_matrix (CI.cptr x78))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function (CI.Primitive CI.Float, Returns CI.Void))),
+  "sk_canvas_skew" ->
+  (fun x79 x80 x81 ->
+    skia_wrapped_stub_108_sk_canvas_skew (CI.cptr x79) x80 x81)
+| Function (CI.Pointer _, Function (CI.Primitive CI.Float, Returns CI.Void)),
+  "sk_canvas_rotate_degrees" ->
+  (fun x82 x83 ->
+    skia_wrapped_stub_107_sk_canvas_rotate_degrees (CI.cptr x82) x83)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function (CI.Primitive CI.Float, Returns CI.Void))),
+  "sk_canvas_scale" ->
+  (fun x84 x85 x86 ->
+    skia_wrapped_stub_106_sk_canvas_scale (CI.cptr x84) x85 x86)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function (CI.Primitive CI.Float, Returns CI.Void))),
+  "sk_canvas_translate" ->
+  (fun x87 x88 x89 ->
+    skia_wrapped_stub_105_sk_canvas_translate (CI.cptr x87) x88 x89)
+| Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void)),
+  "sk_canvas_set_matrix" ->
+  (fun x90 x91 ->
+    skia_wrapped_stub_104_sk_canvas_set_matrix (CI.cptr x90) (CI.cptr x91))
+| Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void)),
+  "sk_canvas_concat" ->
+  (fun x92 x93 ->
+    skia_wrapped_stub_103_sk_canvas_concat (CI.cptr x92) (CI.cptr x93))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Pointer _,
+        Function
+          (CI.View {CI.ty = CI.Pointer _; write = x97; _},
+           Function
+             (CI.Pointer _,
+              Function
+                (CI.View {CI.ty = CI.Pointer _; write = x101; _},
+                 Returns CI.Void))))),
+  "sk_canvas_draw_image_rect" ->
+  (fun x94 x95 x96 x99 x100 ->
+    let x98 = CI.cptr (x97 x96) in
+    let x102 = CI.cptr (x101 x100) in
+    skia_wrapped_stub_102_sk_canvas_draw_image_rect (CI.cptr x94)
+    (CI.cptr x95) x98 (CI.cptr x99) x102)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Pointer _,
+        Function
+          (CI.Primitive CI.Float,
+           Function
+             (CI.Primitive CI.Float,
+              Function
+                (CI.View {CI.ty = CI.Pointer _; write = x108; _},
+                 Returns CI.Void))))),
+  "sk_canvas_draw_image" ->
+  (fun x103 x104 x105 x106 x107 ->
+    let x109 = CI.cptr (x108 x107) in
+    skia_wrapped_stub_101_sk_canvas_draw_image (CI.cptr x103) (CI.cptr x104)
+    x105 x106 x109)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.View {CI.ty = CI.Pointer _; write = x112; _},
+        Function
+          (CI.Primitive CI.Int,
+           Function
+             (CI.Primitive CI.Float,
+              Function
+                (CI.Primitive CI.Float,
+                 Function (CI.Pointer _, Returns CI.Void)))))),
+  "sk_canvas_draw_text" ->
+  (fun x110 x111 x114 x115 x116 x117 ->
+    let x113 = CI.cptr (x112 x111) in
+    skia_wrapped_stub_100_sk_canvas_draw_text (CI.cptr x110) x113 x114 x115
+    x116 (CI.cptr x117))
+| Function
+    (CI.Pointer _,
+     Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void))),
+  "sk_canvas_draw_path" ->
+  (fun x118 x119 x120 ->
+    skia_wrapped_stub_99_sk_canvas_draw_path (CI.cptr x118) (CI.cptr x119)
+    (CI.cptr x120))
+| Function
+    (CI.Pointer _,
+     Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void))),
+  "sk_canvas_draw_rrect" ->
+  (fun x121 x122 x123 ->
+    skia_wrapped_stub_98_sk_canvas_draw_rrect (CI.cptr x121) (CI.cptr x122)
+    (CI.cptr x123))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function
+          (CI.Primitive CI.Float,
+           Function
+             (CI.Primitive CI.Float,
+              Function (CI.Pointer _, Returns CI.Void))))),
+  "sk_canvas_draw_circle" ->
+  (fun x124 x125 x126 x127 x128 ->
+    skia_wrapped_stub_97_sk_canvas_draw_circle (CI.cptr x124) x125 x126 x127
+    (CI.cptr x128))
+| Function
+    (CI.Pointer _,
+     Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void))),
+  "sk_canvas_draw_oval" ->
+  (fun x129 x130 x131 ->
+    skia_wrapped_stub_96_sk_canvas_draw_oval (CI.cptr x129) (CI.cptr x130)
+    (CI.cptr x131))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function
+          (CI.Primitive CI.Float,
+           Function
+             (CI.Primitive CI.Float,
+              Function
+                (CI.Primitive CI.Float,
+                 Function (CI.Pointer _, Returns CI.Void)))))),
+  "reason_skia_stub_sk_canvas_draw_rect_ltwh" ->
+  (fun x132 x133 x134 x135 x136 x137 ->
+    skia_wrapped_stub_95_reason_skia_stub_sk_canvas_draw_rect_ltwh
+    (CI.cptr x132) x133 x134 x135 x136 (CI.cptr x137))
+| Function
+    (CI.Pointer _,
+     Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void))),
+  "sk_canvas_draw_rect" ->
+  (fun x138 x139 x140 ->
+    skia_wrapped_stub_94_sk_canvas_draw_rect (CI.cptr x138) (CI.cptr x139)
+    (CI.cptr x140))
+| Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void)),
+  "sk_canvas_draw_paint" ->
+  (fun x141 x142 ->
+    skia_wrapped_stub_93_sk_canvas_draw_paint (CI.cptr x141) (CI.cptr x142))
+| Function
+    (CI.Pointer _, Function (CI.Primitive CI.Uint32_t, Returns CI.Void)),
+  "sk_canvas_clear" ->
+  (fun x143 x144 -> skia_wrapped_stub_92_sk_canvas_clear (CI.cptr x143) x144)
+| Function
+    (CI.Primitive CI.Int,
+     Function
+       (CI.Primitive CI.Int,
+        Function
+          (CI.Primitive CI.Int,
+           Function
+             (CI.Primitive CI.Int,
+              Function (CI.Pointer _, Returns (CI.Pointer x150)))))),
+  "gr_backendrendertarget_new_gl" ->
+  (fun x145 x146 x147 x148 x149 ->
+    CI.make_ptr x150
+      (skia_wrapped_stub_91_gr_backendrendertarget_new_gl x145 x146 x147 x148
+        (CI.cptr x149)))
+| Function
+    (CI.View {CI.ty = CI.Pointer _; write = x152; _},
+     Returns (CI.View {CI.ty = CI.Pointer x154; read = x155; _})),
+  "gr_context_make_gl" ->
+  (fun x151 ->
+    let x153 = CI.cptr (x152 x151) in
+    x155 (CI.make_ptr x154 (skia_wrapped_stub_90_gr_context_make_gl x153)))
+| Function
+    (CI.Void, Returns (CI.View {CI.ty = CI.Pointer x157; read = x158; _})),
+  "reason_skia_make_sdl2_interface" ->
+  (fun x156 ->
+    x158
+    (CI.make_ptr x157
+       (skia_wrapped_stub_89_reason_skia_make_sdl2_interface x156)))
+| Function
+    (CI.Void, Returns (CI.View {CI.ty = CI.Pointer x160; read = x161; _})),
+  "gr_glinterface_create_native_interface" ->
+  (fun x159 ->
+    x161
+    (CI.make_ptr x160
+       (skia_wrapped_stub_88_gr_glinterface_create_native_interface x159)))
+| Function (CI.Pointer _, Returns (CI.Pointer x163)), "sk_image_encode" ->
+  (fun x162 ->
+    CI.make_ptr x163 (skia_wrapped_stub_87_sk_image_encode (CI.cptr x162)))
+| Function (CI.Pointer _, Returns CI.Void), "sk_image_unref" ->
+  (fun x164 -> skia_wrapped_stub_86_sk_image_unref (CI.cptr x164))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.View {CI.ty = CI.Pointer _; write = x167; _},
+        Returns (CI.View {CI.ty = CI.Pointer x169; read = x170; _}))),
+  "sk_image_new_from_encoded" ->
+  (fun x165 x166 ->
+    let x168 = CI.cptr (x167 x166) in
+    x170
+    (CI.make_ptr x169
+       (skia_wrapped_stub_85_sk_image_new_from_encoded (CI.cptr x165) x168)))
+| Function (CI.Pointer _, Returns (CI.Primitive CI.Size_t)),
+  "sk_data_get_size" ->
+  (fun x171 -> skia_wrapped_stub_84_sk_data_get_size (CI.cptr x171))
+| Function (CI.Pointer _, Returns (CI.Pointer x173)), "sk_data_get_data" ->
+  (fun x172 ->
+    CI.make_ptr x173 (skia_wrapped_stub_83_sk_data_get_data (CI.cptr x172)))
+| Function (CI.Pointer _, Returns CI.Void), "sk_data_unref" ->
+  (fun x174 -> skia_wrapped_stub_82_sk_data_unref (CI.cptr x174))
+| Function
+    (CI.View {CI.ty = CI.Pointer _; write = x176; _},
+     Returns (CI.Pointer x178)),
+  "sk_data_new_from_file" ->
+  (fun x175 ->
+    let x177 = CI.cptr (x176 x175) in
+    CI.make_ptr x178 (skia_wrapped_stub_81_sk_data_new_from_file x177))
+| Function (CI.Pointer _, Returns CI.Void), "sk_path_close" ->
+  (fun x179 -> skia_wrapped_stub_80_sk_path_close (CI.cptr x179))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function
+          (CI.Primitive CI.Float,
+           Function
+             (CI.Primitive CI.Float,
+              Function
+                (CI.Primitive CI.Float,
+                 Function
+                   (CI.Primitive CI.Float,
+                    Function (CI.Primitive CI.Float, Returns CI.Void))))))),
+  "sk_path_cubic_to" ->
+  (fun x180 x181 x182 x183 x184 x185 x186 ->
+    skia_wrapped_stub_79_sk_path_cubic_to (CI.cptr x180) x181 x182 x183 x184
+    x185 x186)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function (CI.Primitive CI.Float, Returns CI.Void))),
+  "sk_path_line_to" ->
+  (fun x187 x188 x189 ->
+    skia_wrapped_stub_78_sk_path_line_to (CI.cptr x187) x188 x189)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function (CI.Primitive CI.Float, Returns CI.Void))),
+  "sk_path_move_to" ->
+  (fun x190 x191 x192 ->
+    skia_wrapped_stub_77_sk_path_move_to (CI.cptr x190) x191 x192)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function
+          (CI.Primitive CI.Float,
+           Function
+             (CI.Primitive CI.Float,
+              Function
+                (CI.View {CI.ty = CI.Primitive CI.Uint32_t; write = x198; _},
+                 Returns CI.Void))))),
+  "sk_path_add_circle" ->
+  (fun x193 x194 x195 x196 x197 ->
+    let x199 = x198 x197 in
+    skia_wrapped_stub_76_sk_path_add_circle (CI.cptr x193) x194 x195 x196
+    x199)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Pointer _,
+        Function
+          (CI.Primitive CI.Float,
+           Function
+             (CI.Primitive CI.Float,
+              Function
+                (CI.View {CI.ty = CI.Primitive CI.Uint32_t; write = x205; _},
+                 Returns CI.Void))))),
+  "sk_path_add_rounded_rect" ->
+  (fun x200 x201 x202 x203 x204 ->
+    let x206 = x205 x204 in
+    skia_wrapped_stub_75_sk_path_add_rounded_rect (CI.cptr x200)
+    (CI.cptr x201) x202 x203 x206)
+| Function (CI.Pointer _, Returns CI.Void), "sk_path_delete" ->
+  (fun x207 -> skia_wrapped_stub_74_sk_path_delete (CI.cptr x207))
+| Function (CI.Void, Returns (CI.Pointer x209)), "sk_path_new" ->
+  (fun x208 -> CI.make_ptr x209 (skia_wrapped_stub_73_sk_path_new x208))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Pointer _,
+        Function (CI.Pointer _, Returns (CI.Primitive CI.Bool)))),
+  "sk_rrect_transform" ->
+  (fun x210 x211 x212 ->
+    skia_wrapped_stub_72_sk_rrect_transform (CI.cptr x210) (CI.cptr x211)
+    (CI.cptr x212))
+| Function (CI.Pointer _, Returns (CI.Primitive CI.Bool)),
+  "sk_rrect_is_valid" ->
+  (fun x213 -> skia_wrapped_stub_71_sk_rrect_is_valid (CI.cptr x213))
+| Function
+    (CI.Pointer _, Function (CI.Pointer _, Returns (CI.Primitive CI.Bool))),
+  "sk_rrect_contains" ->
+  (fun x214 x215 ->
+    skia_wrapped_stub_70_sk_rrect_contains (CI.cptr x214) (CI.cptr x215))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function (CI.Primitive CI.Float, Returns CI.Void))),
+  "sk_rrect_offset" ->
+  (fun x216 x217 x218 ->
+    skia_wrapped_stub_69_sk_rrect_offset (CI.cptr x216) x217 x218)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function (CI.Primitive CI.Float, Returns CI.Void))),
+  "sk_rrect_outset" ->
+  (fun x219 x220 x221 ->
+    skia_wrapped_stub_68_sk_rrect_outset (CI.cptr x219) x220 x221)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function (CI.Primitive CI.Float, Returns CI.Void))),
+  "sk_rrect_inset" ->
+  (fun x222 x223 x224 ->
+    skia_wrapped_stub_67_sk_rrect_inset (CI.cptr x222) x223 x224)
+| Function
+    (CI.Pointer _,
+     Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void))),
+  "sk_rrect_set_rect_radii" ->
+  (fun x225 x226 x227 ->
+    skia_wrapped_stub_66_sk_rrect_set_rect_radii (CI.cptr x225)
+    (CI.cptr x226) (CI.cptr x227))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Pointer _,
+        Function
+          (CI.Primitive CI.Float,
+           Function
+             (CI.Primitive CI.Float,
+              Function
+                (CI.Primitive CI.Float,
+                 Function (CI.Primitive CI.Float, Returns CI.Void)))))),
+  "sk_rrect_set_nine_patch" ->
+  (fun x228 x229 x230 x231 x232 x233 ->
+    skia_wrapped_stub_65_sk_rrect_set_nine_patch (CI.cptr x228)
+    (CI.cptr x229) x230 x231 x232 x233)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Pointer _,
+        Function
+          (CI.Primitive CI.Float,
+           Function (CI.Primitive CI.Float, Returns CI.Void)))),
+  "sk_rrect_set_rect_xy" ->
+  (fun x234 x235 x236 x237 ->
+    skia_wrapped_stub_64_sk_rrect_set_rect_xy (CI.cptr x234) (CI.cptr x235)
+    x236 x237)
+| Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void)),
+  "sk_rrect_set_oval" ->
+  (fun x238 x239 ->
+    skia_wrapped_stub_63_sk_rrect_set_oval (CI.cptr x238) (CI.cptr x239))
+| Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void)),
+  "sk_rrect_set_rect" ->
+  (fun x240 x241 ->
+    skia_wrapped_stub_62_sk_rrect_set_rect (CI.cptr x240) (CI.cptr x241))
+| Function (CI.Pointer _, Returns CI.Void), "sk_rrect_set_empty" ->
+  (fun x242 -> skia_wrapped_stub_61_sk_rrect_set_empty (CI.cptr x242))
+| Function (CI.Pointer _, Returns (CI.Primitive CI.Float)),
+  "sk_rrect_get_height" ->
+  (fun x243 -> skia_wrapped_stub_60_sk_rrect_get_height (CI.cptr x243))
+| Function (CI.Pointer _, Returns (CI.Primitive CI.Float)),
+  "sk_rrect_get_width" ->
+  (fun x244 -> skia_wrapped_stub_59_sk_rrect_get_width (CI.cptr x244))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.View {CI.ty = CI.Primitive CI.Uint32_t; write = x247; _},
+        Function (CI.Pointer _, Returns CI.Void))),
+  "sk_rrect_get_radii" ->
+  (fun x245 x246 x249 ->
+    let x248 = x247 x246 in
+    skia_wrapped_stub_58_sk_rrect_get_radii (CI.cptr x245) x248
+    (CI.cptr x249))
+| Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void)),
+  "sk_rrect_get_rect" ->
+  (fun x250 x251 ->
+    skia_wrapped_stub_57_sk_rrect_get_rect (CI.cptr x250) (CI.cptr x251))
+| Function
+    (CI.Pointer _,
+     Returns (CI.View {CI.ty = CI.Primitive CI.Uint32_t; read = x253; _})),
+  "sk_rrect_get_type" ->
+  (fun x252 -> x253 (skia_wrapped_stub_56_sk_rrect_get_type (CI.cptr x252)))
+| Function (CI.Pointer _, Returns CI.Void), "sk_rrect_delete" ->
+  (fun x254 -> skia_wrapped_stub_55_sk_rrect_delete (CI.cptr x254))
+| Function (CI.Pointer _, Returns (CI.Pointer x256)), "sk_rrect_new_copy" ->
+  (fun x255 ->
+    CI.make_ptr x256 (skia_wrapped_stub_54_sk_rrect_new_copy (CI.cptr x255)))
+| Function (CI.Void, Returns (CI.Pointer x258)), "sk_rrect_new" ->
+  (fun x257 -> CI.make_ptr x258 (skia_wrapped_stub_53_sk_rrect_new x257))
+| Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void)),
+  "sk_matrix44_to_matrix" ->
+  (fun x259 x260 ->
+    skia_wrapped_stub_52_sk_matrix44_to_matrix (CI.cptr x259) (CI.cptr x260))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Int,
+        Function
+          (CI.Primitive CI.Int,
+           Function (CI.Primitive CI.Float, Returns CI.Void)))),
+  "sk_matrix44_set" ->
+  (fun x261 x262 x263 x264 ->
+    skia_wrapped_stub_51_sk_matrix44_set (CI.cptr x261) x262 x263 x264)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Int,
+        Function (CI.Primitive CI.Int, Returns (CI.Primitive CI.Float)))),
+  "sk_matrix44_get" ->
+  (fun x265 x266 x267 ->
+    skia_wrapped_stub_50_sk_matrix44_get (CI.cptr x265) x266 x267)
+| Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void)),
+  "sk_matrix44_post_concat" ->
+  (fun x268 x269 ->
+    skia_wrapped_stub_49_sk_matrix44_post_concat (CI.cptr x268)
+    (CI.cptr x269))
+| Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void)),
+  "sk_matrix44_pre_concat" ->
+  (fun x270 x271 ->
+    skia_wrapped_stub_48_sk_matrix44_pre_concat (CI.cptr x270) (CI.cptr x271))
+| Function
+    (CI.Pointer _,
+     Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void))),
+  "sk_matrix44_set_concat" ->
+  (fun x272 x273 x274 ->
+    skia_wrapped_stub_47_sk_matrix44_set_concat (CI.cptr x272) (CI.cptr x273)
+    (CI.cptr x274))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function
+          (CI.Primitive CI.Float,
+           Function (CI.Primitive CI.Float, Returns CI.Void)))),
+  "sk_matrix44_post_scale" ->
+  (fun x275 x276 x277 x278 ->
+    skia_wrapped_stub_46_sk_matrix44_post_scale (CI.cptr x275) x276 x277 x278)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function
+          (CI.Primitive CI.Float,
+           Function (CI.Primitive CI.Float, Returns CI.Void)))),
+  "sk_matrix44_pre_scale" ->
+  (fun x279 x280 x281 x282 ->
+    skia_wrapped_stub_45_sk_matrix44_pre_scale (CI.cptr x279) x280 x281 x282)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function
+          (CI.Primitive CI.Float,
+           Function (CI.Primitive CI.Float, Returns CI.Void)))),
+  "sk_matrix44_set_scale" ->
+  (fun x283 x284 x285 x286 ->
+    skia_wrapped_stub_44_sk_matrix44_set_scale (CI.cptr x283) x284 x285 x286)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function
+          (CI.Primitive CI.Float,
+           Function (CI.Primitive CI.Float, Returns CI.Void)))),
+  "sk_matrix44_post_translate" ->
+  (fun x287 x288 x289 x290 ->
+    skia_wrapped_stub_43_sk_matrix44_post_translate (CI.cptr x287) x288 x289
+    x290)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function
+          (CI.Primitive CI.Float,
+           Function (CI.Primitive CI.Float, Returns CI.Void)))),
+  "sk_matrix44_pre_translate" ->
+  (fun x291 x292 x293 x294 ->
+    skia_wrapped_stub_42_sk_matrix44_pre_translate (CI.cptr x291) x292 x293
+    x294)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function
+          (CI.Primitive CI.Float,
+           Function (CI.Primitive CI.Float, Returns CI.Void)))),
+  "sk_matrix44_set_translate" ->
+  (fun x295 x296 x297 x298 ->
+    skia_wrapped_stub_41_sk_matrix44_set_translate (CI.cptr x295) x296 x297
+    x298)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function
+          (CI.Primitive CI.Float,
+           Function
+             (CI.Primitive CI.Float,
+              Function (CI.Primitive CI.Float, Returns CI.Void))))),
+  "sk_matrix44_set_rotate_about_radians" ->
+  (fun x299 x300 x301 x302 x303 ->
+    skia_wrapped_stub_40_sk_matrix44_set_rotate_about_radians (CI.cptr x299)
+    x300 x301 x302 x303)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function
+          (CI.Primitive CI.Float,
+           Function
+             (CI.Primitive CI.Float,
+              Function (CI.Primitive CI.Float, Returns CI.Void))))),
+  "sk_matrix44_set_rotate_about_degrees" ->
+  (fun x304 x305 x306 x307 x308 ->
+    skia_wrapped_stub_39_sk_matrix44_set_rotate_about_degrees (CI.cptr x304)
+    x305 x306 x307 x308)
+| Function (CI.Pointer _, Returns CI.Void), "sk_matrix44_destroy" ->
+  (fun x309 -> skia_wrapped_stub_38_sk_matrix44_destroy (CI.cptr x309))
+| Function (CI.Void, Returns (CI.Pointer x311)), "sk_matrix44_new_identity" ->
+  (fun x310 ->
+    CI.make_ptr x311 (skia_wrapped_stub_37_sk_matrix44_new_identity x310))
+| Function (CI.Void, Returns (CI.Pointer x313)), "sk_matrix44_new" ->
+  (fun x312 -> CI.make_ptr x313 (skia_wrapped_stub_36_sk_matrix44_new x312))
+| Function
+    (CI.Pointer _,
+     Function (CI.Primitive CI.Float, Returns (CI.Primitive CI.Float))),
+  "sk_matrix_map_radius" ->
+  (fun x314 x315 ->
+    skia_wrapped_stub_35_sk_matrix_map_radius (CI.cptr x314) x315)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function
+          (CI.Primitive CI.Float, Function (CI.Pointer _, Returns CI.Void)))),
+  "sk_matrix_map_vector" ->
+  (fun x316 x317 x318 x319 ->
+    skia_wrapped_stub_34_sk_matrix_map_vector (CI.cptr x316) x317 x318
+    (CI.cptr x319))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Primitive CI.Float,
+        Function
+          (CI.Primitive CI.Float, Function (CI.Pointer _, Returns CI.Void)))),
+  "sk_matrix_map_xy" ->
+  (fun x320 x321 x322 x323 ->
+    skia_wrapped_stub_33_sk_matrix_map_xy (CI.cptr x320) x321 x322
+    (CI.cptr x323))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Pointer _,
+        Function
+          (CI.Pointer _, Function (CI.Primitive CI.Int, Returns CI.Void)))),
+  "sk_matrix_map_vectors" ->
+  (fun x324 x325 x326 x327 ->
+    skia_wrapped_stub_32_sk_matrix_map_vectors (CI.cptr x324) (CI.cptr x325)
+    (CI.cptr x326) x327)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Pointer _,
+        Function
+          (CI.Pointer _, Function (CI.Primitive CI.Int, Returns CI.Void)))),
+  "sk_matrix_map_points" ->
+  (fun x328 x329 x330 x331 ->
+    skia_wrapped_stub_31_sk_matrix_map_points (CI.cptr x328) (CI.cptr x329)
+    (CI.cptr x330) x331)
+| Function
+    (CI.Pointer _,
+     Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void))),
+  "sk_matrix_map_rect" ->
+  (fun x332 x333 x334 ->
+    skia_wrapped_stub_30_sk_matrix_map_rect (CI.cptr x332) (CI.cptr x333)
+    (CI.cptr x334))
+| Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void)),
+  "sk_matrix_post_concat" ->
+  (fun x335 x336 ->
+    skia_wrapped_stub_29_sk_matrix_post_concat (CI.cptr x335) (CI.cptr x336))
+| Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void)),
+  "sk_matrix_pre_concat" ->
+  (fun x337 x338 ->
+    skia_wrapped_stub_28_sk_matrix_pre_concat (CI.cptr x337) (CI.cptr x338))
+| Function
+    (CI.Pointer _,
+     Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void))),
+  "sk_matrix_concat" ->
+  (fun x339 x340 x341 ->
+    skia_wrapped_stub_27_sk_matrix_concat (CI.cptr x339) (CI.cptr x340)
+    (CI.cptr x341))
+| Function
+    (CI.Pointer _, Function (CI.Pointer _, Returns (CI.Primitive CI.Bool))),
+  "sk_matrix_try_invert" ->
+  (fun x342 x343 ->
+    skia_wrapped_stub_26_sk_matrix_try_invert (CI.cptr x342) (CI.cptr x343))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.View {CI.ty = CI.Primitive CI.Uint32_t; write = x346; _},
+        Returns CI.Void)),
+  "sk_paint_set_text_encoding" ->
+  (fun x344 x345 ->
+    let x347 = x346 x345 in
+    skia_wrapped_stub_25_sk_paint_set_text_encoding (CI.cptr x344) x347)
+| Function
+    (CI.Pointer _,
+     Returns (CI.View {CI.ty = CI.Primitive CI.Uint32_t; read = x349; _})),
+  "sk_paint_get_text_encoding" ->
+  (fun x348 ->
+    x349 (skia_wrapped_stub_24_sk_paint_get_text_encoding (CI.cptr x348)))
+| Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void)),
+  "sk_paint_set_imagefilter" ->
+  (fun x350 x351 ->
+    skia_wrapped_stub_23_sk_paint_set_imagefilter (CI.cptr x350)
+    (CI.cptr x351))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.View {CI.ty = CI.Pointer _; write = x354; _},
+        Function
+          (CI.Primitive CI.Int,
+           Function
+             (CI.View {CI.ty = CI.Pointer _; write = x358; _},
+              Returns (CI.Primitive CI.Float))))),
+  "sk_paint_measure_text" ->
+  (fun x352 x353 x356 x357 ->
+    let x355 = CI.cptr (x354 x353) in
+    let x359 = CI.cptr (x358 x357) in
+    skia_wrapped_stub_22_sk_paint_measure_text (CI.cptr x352) x355 x356 x359)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.View {CI.ty = CI.Primitive CI.Uint32_t; write = x362; _},
+        Returns CI.Void)),
+  "sk_paint_set_hinting" ->
+  (fun x360 x361 ->
+    let x363 = x362 x361 in
+    skia_wrapped_stub_21_sk_paint_set_hinting (CI.cptr x360) x363)
+| Function
+    (CI.Pointer _,
+     Returns (CI.View {CI.ty = CI.Primitive CI.Uint32_t; read = x365; _})),
+  "sk_paint_get_hinting" ->
+  (fun x364 ->
+    x365 (skia_wrapped_stub_20_sk_paint_get_hinting (CI.cptr x364)))
+| Function (CI.Pointer _, Returns (CI.Primitive CI.Bool)),
+  "sk_paint_is_autohinted" ->
+  (fun x366 -> skia_wrapped_stub_19_sk_paint_is_autohinted (CI.cptr x366))
+| Function (CI.Pointer _, Function (CI.Primitive CI.Bool, Returns CI.Void)),
+  "sk_paint_set_autohinted" ->
+  (fun x367 x368 ->
+    skia_wrapped_stub_18_sk_paint_set_autohinted (CI.cptr x367) x368)
+| Function (CI.Pointer _, Returns (CI.Primitive CI.Bool)),
+  "sk_paint_is_autohinted" ->
+  (fun x369 -> skia_wrapped_stub_17_sk_paint_is_autohinted (CI.cptr x369))
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.Pointer _,
+        Function (CI.Primitive CI.Float, Returns (CI.Primitive CI.Float)))),
+  "sk_paint_get_fontmetrics" ->
+  (fun x370 x371 x372 ->
+    skia_wrapped_stub_16_sk_paint_get_fontmetrics (CI.cptr x370)
+    (CI.cptr x371) x372)
+| Function (CI.Pointer _, Function (CI.Primitive CI.Float, Returns CI.Void)),
+  "sk_paint_set_textsize" ->
+  (fun x373 x374 ->
+    skia_wrapped_stub_15_sk_paint_set_textsize (CI.cptr x373) x374)
+| Function (CI.Pointer _, Function (CI.Primitive CI.Bool, Returns CI.Void)),
+  "sk_paint_set_subpixel_text" ->
+  (fun x375 x376 ->
+    skia_wrapped_stub_14_sk_paint_set_subpixel_text (CI.cptr x375) x376)
+| Function (CI.Pointer _, Function (CI.Primitive CI.Bool, Returns CI.Void)),
+  "sk_paint_set_lcd_render_text" ->
+  (fun x377 x378 ->
+    skia_wrapped_stub_13_sk_paint_set_lcd_render_text (CI.cptr x377) x378)
+| Function (CI.Pointer _, Function (CI.Pointer _, Returns CI.Void)),
+  "sk_paint_set_typeface" ->
+  (fun x379 x380 ->
+    skia_wrapped_stub_12_sk_paint_set_typeface (CI.cptr x379) (CI.cptr x380))
+| Function (CI.Pointer _, Function (CI.Primitive CI.Float, Returns CI.Void)),
+  "sk_paint_set_stroke_width" ->
+  (fun x381 x382 ->
+    skia_wrapped_stub_11_sk_paint_set_stroke_width (CI.cptr x381) x382)
+| Function
+    (CI.Pointer _,
+     Function
+       (CI.View {CI.ty = CI.Primitive CI.Uint32_t; write = x385; _},
+        Returns CI.Void)),
+  "sk_paint_set_style" ->
+  (fun x383 x384 ->
+    let x386 = x385 x384 in
+    skia_wrapped_stub_10_sk_paint_set_style (CI.cptr x383) x386)
+| Function (CI.Pointer _, Function (CI.Primitive CI.Bool, Returns CI.Void)),
+  "sk_paint_set_antialias" ->
+  (fun x387 x388 ->
+    skia_wrapped_stub_9_sk_paint_set_antialias (CI.cptr x387) x388)
+| Function
+    (CI.Pointer _, Function (CI.Primitive CI.Uint32_t, Returns CI.Void)),
+  "sk_paint_set_color" ->
+  (fun x389 x390 ->
+    skia_wrapped_stub_8_sk_paint_set_color (CI.cptr x389) x390)
+| Function (CI.Pointer _, Returns CI.Void), "sk_paint_delete" ->
+  (fun x391 -> skia_wrapped_stub_7_sk_paint_delete (CI.cptr x391))
+| Function (CI.Void, Returns (CI.Pointer x393)), "sk_paint_new" ->
+  (fun x392 -> CI.make_ptr x393 (skia_wrapped_stub_6_sk_paint_new x392))
+| Function
+    (CI.Primitive CI.Float,
+     Function
+       (CI.Primitive CI.Float,
+        Function
+          (CI.Primitive CI.Float,
+           Function
+             (CI.Primitive CI.Float,
+              Function
+                (CI.Primitive CI.Uint32_t,
+                 Function
+                   (CI.View
+                      {CI.ty = CI.Primitive CI.Uint32_t; write = x400; _},
+                    Function
+                      (CI.View {CI.ty = CI.Pointer _; write = x403; _},
+                       Function
+                         (CI.View {CI.ty = CI.Pointer _; write = x406; _},
+                          Returns (CI.Pointer x408))))))))),
+  "sk_imagefilter_new_drop_shadow" ->
+  (fun x394 x395 x396 x397 x398 x399 x402 x405 ->
+    let x401 = x400 x399 in
+    let x404 = CI.cptr (x403 x402) in
+    let x407 = CI.cptr (x406 x405) in
+    CI.make_ptr x408
+      (skia_wrapped_stub_5_sk_imagefilter_new_drop_shadow x394 x395 x396 x397
+       x398 x401 x404 x407))
+| Function (CI.Pointer _, Returns CI.Void), "sk_imagefilter_unref" ->
+  (fun x409 -> skia_wrapped_stub_4_sk_imagefilter_unref (CI.cptr x409))
+| Function
+    (CI.View {CI.ty = CI.Pointer _; write = x411; _},
+     Function
+       (CI.Primitive CI.Int,
+        Returns (CI.View {CI.ty = CI.Pointer x414; read = x415; _}))),
+  "sk_typeface_create_from_file" ->
+  (fun x410 x413 ->
+    let x412 = CI.cptr (x411 x410) in
+    x415
+    (CI.make_ptr x414
+       (skia_wrapped_stub_3_sk_typeface_create_from_file x412 x413)))
+| Function
+    (CI.View {CI.ty = CI.Pointer _; write = x417; _},
+     Function
+       (CI.Pointer _,
+        Returns (CI.View {CI.ty = CI.Pointer x420; read = x421; _}))),
+  "sk_typeface_create_from_name_with_font_style" ->
+  (fun x416 x419 ->
+    let x418 = CI.cptr (x417 x416) in
+    x421
+    (CI.make_ptr x420
+       (skia_wrapped_stub_2_sk_typeface_create_from_name_with_font_style x418
+         (CI.cptr x419))))
+| Function
+    (CI.Primitive CI.Int,
+     Function
+       (CI.Primitive CI.Int,
+        Function
+          (CI.View {CI.ty = CI.Primitive CI.Uint32_t; write = x425; _},
+           Returns (CI.Pointer x427)))),
+  "sk_fontstyle_new" ->
+  (fun x422 x423 x424 ->
+    let x426 = x425 x424 in
+    CI.make_ptr x427 (skia_wrapped_stub_1_sk_fontstyle_new x422 x423 x426))
+| _, s ->  Printf.ksprintf failwith "No match for %s" s
+
+
+let foreign_value : type a. string -> a Ctypes.typ -> a Ctypes.ptr =
+  fun name t -> match t, name with
+| _, s ->  Printf.ksprintf failwith "No match for %s" s
+
diff --git a/src/wrapped/stubgen/dune b/src/wrapped/stubgen/dune
index 83556d8..d5062ce 100644
--- a/src/wrapped/stubgen/dune
+++ b/src/wrapped/stubgen/dune
@@ -1,17 +1,3 @@
-(executable
- (name stubgen)
- (package skia)
- (modules stubgen)
- (public_name stubgen.exe)
- (libraries skia.wrapped.bindings ctypes))
-
-(executable
- (name types_stubgen)
- (package skia)
- (modules types_stubgen)
- (public_name types_stubgen.exe)
- (libraries skia.wrapped.types ctypes.stubs ctypes))
-
 (rule
  (targets ml_types_stubgen.c)
  (deps ./types_stubgen.exe)
